/* niui â€“ Fold */
@import "../../css/niui-setup";

.n-fold {
	display: grid;
	position: relative;
	margin: 0;
	max-width: 100%;
	z-index: 1;
	text-align: initial;

	&--inline {
		display: inline-grid;
		vertical-align: top;
	}

	&__label {
		margin: 0;
		float: none;
		text-align: start;
		width: 100%;
		user-select: none;
		position: relative;
		padding: 0.625em;
		padding-right: 1.5em;
		word-wrap: break-word;
		word-break: break-all;
		box-sizing: border-box;
		background-color: var(--control-bg, inherit);
		color: inherit;
		color: var(--control-color, inherit);
		overflow: hidden; // Safari focus ring fix
		border: 0;
		text-align: start;
		font-size: inherit;

		&:after {
			transition: transform 0.2s ease-in-out;
			content: "";
			position: absolute;
			display: block;
			right: 0.5em;
			top: calc(50% - 0.5em);
			width: 1em;
			height: 1em;
			--icon: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg version='1.1' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpolygon transform='translate(8 8) rotate(180) translate(-8 -8)' points='8 0 16 16 0 16' fill='%23000' fill-rule='nonzero'/%3E%3C/g%3E%3C/svg%3E%0A");
			-webkit-mask: var(--icon) center center no-repeat;
			-webkit-mask-size: 0.5em;
			mask: var(--icon) center center no-repeat;
			mask-size: 0.5em;
			background-color: var(--control-color, #000);
		}
	}

	&[aria-expanded] > .n-fold__label {
		cursor: zoom-out;

		&:after {
			transform: rotate(180deg);
		}
	}

	&--mobile {
		padding: 0;
		width: auto;

		> .n-fold__label:after {
			display: none;
		}

		> .n-fold__label,
		> input.n-trigger {
			display: none;
			width: auto;
			line-height: $line-height;
			min-height: $line-height-em;
			height: $line-height-em * 2;
		}

		.n-fold__content {
			/* hidden fold item */
			overflow: visible;
		}
	}

	&:not([data-init]):not(.n-fold--mobile) .n-fold__content {
		/* hidden fold item */
		overflow: hidden;
		cursor: auto;
		will-change: max-width;

		> .n-fold {
			// Don't crop the focus outline
			margin: 0.3em;
		}
	}

	&[aria-expanded] .n-fold__content {
		max-height: none;
	}

	&:not([aria-expanded]):not(.n-fold--mobile):not(.n-fold--horizontal) > .n-fold__content,
	&[aria-expanded]:not(.n-fold--horizontal) input.n-trigger:checked ~ .n-fold__content

	/* also for CSS-only open by default */
		{
		max-height: var(--start-height, 0); // Fallback to 0
	}

	&--horizontal {
		> * {
			display: none;
		}

		> .n-fold__label:after {
			transform: rotate(-90deg);
		}

		&[aria-expanded] > .n-fold__label:after {
			transform: rotate(90deg);
		}

		&:not([data-init]) > .n-fold__content {
			width: 0;
		}

		&[data-init] > .n-fold__content,
		&[aria-expanded] > .n-fold__content,
		> input.n-trigger:checked ~ .n-fold__content {
			width: 100%;
		}

		> .n-fold__content {
			height: 0;

			> * {
				width: var(--width);
			}
		}
	}

	&:first-of-type {
		margin-bottom: 0;

		.n-fold__content {
			padding-top: 0;
		}
	}

	&__content > * {
		margin-top: 0;
	}

	&:not(.n-fold--horizontal) > input.n-trigger:checked ~ .n-fold__content,
	&.n-fold--mobile:not(.n-fold--horizontal) .n-fold__content {
		max-height: none;
	}

	&[aria-expanded] > input.n-trigger + .n-fold__content {
		display: inline-block;
	}

	span.n-burger {
		width: $line-height-em;
		height: $line-height-em;
		line-height: $line-height-em;
		font-size: 2em;
		display: inline-block;
		text-align: center;
		position: relative;
		background: var(--control-bg, #fff);

		&:after {
			content: "=";
		}
	}

	&[data-ready]:not([aria-expanded]):not(.n-fold--mobile):not(.n-fold--horizontal) {

		// Don't open it by tabbing, because of focuseable items inside
		.n-fold--content:not([style*="--start-height"]) {
			display: none;
		}
	}

	&__label,
	> input[type="checkbox"] {
		// Overlay the checkbox over the label
		grid-column-start: 1;
		grid-row-start: 1;
		width: auto;
		height: auto;
		cursor: zoom-in;
	}

	> input[type="checkbox"] {
		z-index: 1;
		appearance: none;
		-webkit-appearance: none;
		margin: 0;

		&:checked {
			cursor: zoom-out;
		}
	}

	span.n-burger {
		&:before {
			content: "";
			position: absolute;
			left: $line-height-em/6;
			width: $line-height-em/1.5;
			top: $line-height-em/10;
			box-shadow: 0 $line-height-em/6 0 1px var(--control-color, #333), 0 $line-height-em/2.4 0 1px var(--control-color, #333),
				0 $line-height-em/1.5 0 1px var(--control-color, #333);
			height: 0.1px;
		}

		&:after {
			display: none;
		}
	}

	&--horizontal > * {
		display: block;
	}
}

@media screen and (max-width: $screen-narrow-max) {
	.n-fold--mobile {

		> .n-fold__label,
		> input.n-trigger {
			display: flex;
			width: 3em;
			height: 3em;
			padding: 0;
			border: none; // for iOS
		}

		> input.n-trigger {
			width: 4em;
			height: 4em;
		}

		&:not([aria-expanded]) .n-fold__content {
			max-height: 0;
			max-width: 0;
		}

		> input.n-trigger:checked ~ .n-fold__content {
			max-height: none;
		}

		.n-fold__content {
			// hidden fold item
			overflow: hidden;
		}
	}

	@supports (--a: 1) {
		.n-header.n-header__fixed-mobile .n-fold--mobile {
			position: fixed;
			top: 0;
			z-index: 2;

			&[aria-expanded] {
				bottom: 0;
				overflow: visible; // iPhone fix
				z-index: 4;

				.n-fold__content {
					overflow: auto;
					
					position: fixed;
					top: 3em; // header height, shouldn't be hardcoded
					bottom: 0;
				}
			}

			.n-fold__content {
				padding: 0 $line-height-em/4;
				background: #fff;
			}
		}
	}
}

@media screen and (min-width: $screen-narrow) {
	.n-fold--mobile {
		overflow: visible;
	}
}