/* niui – rado.bg */

@charset 'utf-8';

@import "niui-setup";
@import "theme-variables"; /* Rewrite base variables here; add theme CSS below this one in <head> */

.n-contain {
	max-width: 82 * $font-size;
	margin: 0 auto;
	width: 100%;
}

/* Basic elements */

html {
	height: 100%;
	// 	scroll-behavior: smooth;
}

body {
	margin: 0;
	position: relative; // For the tooltips
}

html.n-vertical-page {
	&,
	body {
		height: 100%;
		margin: 0 auto;
		overflow-x: hidden;
	}

	body {
		overflow: hidden;
		height: auto;
	}
}

.n-sticky-footer {
	min-height: 100vh; // % has problems with Chrome 67
	display: flex; /* Sticky footer */
	flex-direction: column;

	main {
		flex-grow: 1;
	}
}

.n-viewport.n-header-banner {
	min-height: 100vh;
	display: flex;
	flex-direction: column;
}

.n-viewport.n-header-banner .n-banner {
	flex-grow: 1;
	justify-content: center;
	flex-direction: column;
	display: flex;
}

.n-viewport.n-header-banner.n-push-up:after {
	// Move centered content up, because the middle seems low

	content: "";
	flex-grow: 1;
}

.n-header a.n-logo {
	display: inline-block;
}

.n-wide-screen {
	display: block;
}

.n-narrow-screen {
	display: none;
}

/* Footer */

.n-footer {
	position: relative; // Because of the backtotop button
}

.n-footer > * {
	position: static;
}

/* Element as a window to an image spanning viewpoert dimensions. iOS doesn't support it natively and requires div.fixed-bg-image */

.n-fixed-bg {
	background-size: cover;
	background-position: center center;
}

@supports (clip: rect(auto, auto, auto, auto)) {
	.n-fixed-bg {
		will-change: scroll;
		background-size: 0;
		position: relative;
		z-index: 1;

		.n-fixed-bg__image {
			position: absolute;
			background-size: 0;
			z-index: -1;
			clip: rect(auto, auto, auto, auto);

			&,
			&:before {
				top: 0;
				left: 0;
				width: 100%;
				height: 100%; // Chrome bug, addressed below
				background-image: inherit;
			}

			&:before {
				content: "";
				position: fixed;
				background-size: cover;
				background-position: center center;
				height: 100vh; // Mobile browser resize when hiding/showing toolbars

				transform: translate3d(0, 0, 0); // Force refresh while scrolling (iPad), fix missing image parts on (macOS Safari)
			}
		}
	}
}

@supports (-ms-ime-align: auto) {
	// Disable jumpy Edge

	.n-fixed-bg {
		background-size: cover;

		.n-fixed-bg__image {
			display: none;
		}
	}
}

.n-fixed {
	position: fixed;

	&.n-header {
		position: static;
	}
}

a[href].span-relative-parent {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

[data-nui-animation] {
	// Speed up animated elements

	pointer-events: none;
}

// Fallback before loading the full parallax CSS

.n-parallax--back {
	position: absolute;
}

.n-viewport {
	-webkit-overflow-scrolling: touch;
	min-height: 100vh;
	box-sizing: border-box;
	overflow: auto;
	position: relative;
}

/* Narrow Screens */

@media screen and (max-width: $screen-narrow-max) {
	.n-wide-screen {
		display: none;
	}

	.n-narrow-screen {
		display: block;
	}

	.n-viewport.n-header-banner {
		height: auto;
		overflow: hidden;
	}

	.n-header {
		.head-right {
			text-align: start;
		}

		&.n-fixed {
			position: fixed;
			top: 0;
			left: 0;
			right: 0;
			background: #fff;
			z-index: 7;
		}

		a.n-logo {
			float: right;
		}
	}
}
/* niui – Button */

@import "../../css/niui-setup";

.n-btn,
.n-form input[type="submit"],
.n-form button[type="submit"],
.n-form button[type="reset"],
button.n-btn,
a.n-btn[href],
.n-type a.n-btn[href] {
	font-size: inherit;
	line-height: $line-height;
	min-height: $line-height-em;
	text-decoration: none;
	display: inline-block;
	cursor: pointer;
	width: auto;
	word-break: break-word;
	padding: 0 0.7em;
	-webkit-appearance: none;
	background-color: #333;
	background-color: var(--control-bg, #333);
	color: #eee;
	color: var(--control-color, #eee);
	/*
	-webkit-transition: all .1s linear;
	transition: all .1s linear;
*/
	border: none;
	font-family: inherit;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	user-select: none;
	border-radius: 0;

	&:hover {
		background: #eee;
		color: #333;
	}
}

button.n-btn[disabled] {
	cursor: default;
	opacity: 0.2;
	margin: 0;
	font-size: inherit;
}

.n-btn.n-btn__big,
a[href].n-btn.n-btn__big,
.n-form input[type="submit"],
.n-form button {
	margin: $line-height-em/3 0; // Re-calculate margin, because font-size has changed. To do: fix baseline.
	font-size: 1.2em;
	padding: 0.75em 1em;
	line-height: 1.05em;
	min-height: 0;
	font-weight: 500;
}

/* Back to top button */

a.backtotop[href] {
	line-height: 1;
	margin: 0.7333em auto;
	font-weight: bold;
	background: transparent;
	background: rgba(0, 0, 0, 0.2);
	color: #fff;
	border-radius: 2em;
	font-family: "Hiragino Mincho ProN"; /* fix for iOS */
	cursor: pointer;
	position: absolute;
	bottom: -1em;
	left: 50%;
	transform: translateX(-50%);
	text-decoration: none;
	z-index: 999;
	padding: 0.5em;
	width: 2em;
	text-align: center;
	box-sizing: border-box;
}

// A group of buttons etc with proper horizontal margins also when wrapped

.n-btn--group {
	margin: 0 -0.25em;

	> *,
	.n-btn.n-btn__big,
	> a[href].n-btn.n-btn__big {
		margin-right: 0.25em;
		margin-left: 0.25em;
	}
}

@media screen and (max-width: $screen-narrow-max) {
	.n-btn.n-btn__big {
		display: block;
		text-align: center;
	}
}
/* niui  – Card */

@import "../../css/niui-setup";

.n-card {
	margin: 1em 0;
	--card-bg: #{rgba(0, 0, 0, 0.1)};
	background: rgba(0, 0, 0, 0.1);
	background: var(--card-bg);

	> * {
		padding: 1em;
	}

	.n-card--content {
		background: var(--card-bg);

		p {
			margin: 0.75em 0;

			&:first-child {
				margin-top: 0;
			}
		}
	}

	> img {
		display: block;
		margin: 0 auto;
		max-width: 100%;
		padding: 0;
	}

	.n-card--head > * {
		margin: 0;
	}

	.n-card--head.n-card__image {
		background-position: center center;
		background-size: cover;
		background-repeat: no-repeat;
		color: #fff;

		&:after {
			content: "";
			padding-bottom: 56.25%; // 16:9
			width: 0;
			display: inline-block;
			vertical-align: bottom;
		}

		> * {
			display: inline-block;
			margin: 0;
		}
	}
}
/* niui – Fold */

@import "../../css/niui-setup";

.n-fold {
	position: relative;
	margin: 0;
	max-width: 100%;
	z-index: 1;
	text-align: initial;

	&.n-fold__inline {
		display: inline-grid;
		vertical-align: top;
	}

	// 	&:not([data-ready]) {

	display: grid;

	// 	}

	> .n-fold--label {
		margin: 0;
		float: none;
		text-align: left;
		text-align: start;
		width: 100%;
		/*
		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-khtml-user-select: none;
		-moz-user-select: none;
		user-select: none;
*/
		position: relative;
		padding: 0.625em;
		padding-right: 1.5em;
		word-wrap: break-word;
		word-break: break-all;
		box-sizing: border-box;
		background-color: inherit;
		background-color: var(--control-bg, inherit);
		color: inherit;
		color: var(--control-color, inherit);
		overflow: hidden; // Safari focus ring fix
		border: 0;
		text-align: start;
		font-size: inherit;

		&:after {
			transition: transform 0.2s ease-in-out;
			content: "";
			position: absolute;
			display: block;
			right: 0.5em;
			top: calc(50% - 0.5em);
			width: 1em;
			height: 1em;
			-webkit-mask: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg version='1.1' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpolygon transform='translate(8 8) rotate(180) translate(-8 -8)' points='8 0 16 16 0 16' fill='%23000' fill-rule='nonzero'/%3E%3C/g%3E%3C/svg%3E%0A")
				center center no-repeat;
			-webkit-mask-size: 0.5em;
			background-color: #000;
			background-color: var(--control-color, #000);
		}
	}

	&[aria-expanded] > .n-fold--label {
		cursor: zoom-out;

		&:after {
			transform: rotate(180deg);
		}
	}

	&.n-fold__mobile {
		padding: 0;
		width: auto;

		> .n-fold--label:after {
			display: none;
		}

		> .n-fold--label,
		> input.n-trigger {
			display: none;
			width: auto;
			line-height: $line-height;
			min-height: $line-height-em;
			height: $line-height-em * 2;
		}

		.n-fold--content {
			/* hidden fold item */

			overflow: visible;
		}
	}

	&:not([data-init]):not(.n-fold__mobile) .n-fold--content {
		/* hidden fold item */

		overflow: hidden;
		cursor: auto;
		will-change: max-width;

		> .n-fold {
			// Don't crop the focus outline

			margin: 0.3em;
		}
	}

	&[aria-expanded] .n-fold--content {
		max-height: none;
	}

	&:not([aria-expanded]):not(.n-fold__mobile):not(.n-fold__horizontal) > .n-fold--content, &[aria-expanded]:not(.n-fold__horizontal) input.n-trigger:checked ~ .n-fold--content /* also for CSS-only open by default */ {
		max-height: 0;
		max-height: var(--start-height, 0); // Fallback to 0
	}

	&.n-fold__horizontal {
		> * {
			// Not working in IE11-

			display: none;
		}

		> .n-fold--label:after {
			transform: rotate(-90deg);
		}

		&[aria-expanded] > .n-fold--label:after {
			transform: rotate(90deg);
		}

		&:not([data-init]) > .n-fold--content {
			width: 0;
		}

		&[data-init] > .n-fold--content,
		&[aria-expanded] > .n-fold--content,
		> input.n-trigger:checked ~ .n-fold--content {
			width: 100%;
		}

		> .n-fold--content {
			height: 0;

			> * {
				width: var(--width);
			}
		}
	}

	&:first-of-type {
		margin-bottom: 0;

		.n-fold--content {
			padding-top: 0;
		}
	}

	.n-fold--content > * {
		margin-top: 0;
	}

	&:not(.n-fold__horizontal) > input.n-trigger:checked ~ .n-fold--content,
	&.n-fold__mobile:not(.n-fold__horizontal) .n-fold--content {
		max-height: none;
	}

	&[aria-expanded] > input.n-trigger + .n-fold--content {
		display: inline-block;
	}

	span.n-burger {
		width: $line-height-em;
		height: $line-height-em;
		line-height: $line-height-em;
		font-size: 2em;
		display: inline-block;
		text-align: center;
		position: relative;
		background: #fff;
		background: var(--control-bg, #fff);

		&:after {
			content: "=";
		}
	}

	&[data-ready]:not([aria-expanded]):not(.n-fold__mobile):not(.n-fold__horizontal) {
		// Don't open it by tabbing, because of focuseable items inside

		.n-fold--content:not([style*="--start-height"]) {
			display: none;
		}
	}
}

.n-fold--label,
.n-fold > input[type="checkbox"] {
	// Overlay the checkbox over the label

	grid-column-start: 1;
	grid-row-start: 1;
	width: auto;
	height: auto;
	cursor: zoom-in;
}

.n-fold > input[type="checkbox"] {
	z-index: 1;
	-webkit-appearance: none;
	margin: 0;

	&:checked {
		cursor: zoom-out;
	}
}

// IE11

_:-ms-input-placeholder,
:root .n-fold > input[type="checkbox"] {
	position: absolute;
	top: 0;
	right: 0;
	left: 0;
	height: 3em;
	opacity: 0;
	width: 100%;
}

_:-ms-input-placeholder,
:root .n-fold:before {
	content: "↓";
	position: absolute;
	right: 1em;
	top: 0.5em;
}

_:-ms-input-placeholder,
:root .n-fold--label:after {
	background: none;
}

// Edge
@supports (-ms-ime-align: auto) {
	.n-fold > .n-fold--label:after {
		background: transparent;
		content: "↓";
	}
}
@supports (--a: 1) {
	// Newer browsers than Android Browser get 3-lines n-burger via box-shadow. Lame check if they support CSS variables.

	.n-fold {
		span.n-burger {
			&:before {
				content: "";
				position: absolute;
				left: $line-height-em/6;
				width: $line-height-em/1.5;
				top: $line-height-em/10;
				box-shadow: 0 $line-height-em/6 0 1px var(--control-color, #333), 0 $line-height-em/2.4 0 1px var(--control-color, #333),
					0 $line-height-em/1.5 0 1px var(--control-color, #333);
				height: 0.1px;
			}

			&:after {
				display: none;
			}
		}

		&.n-fold__horizontal > * {
			display: block;
		}
	}
}

@media screen and (max-width: $screen-narrow-max) {
	.n-fold.n-fold__mobile {
		> .n-fold--label,
		> input.n-trigger {
			display: flex;
			width: 3em;
			height: 3em;
			padding: 0;
			border: none; // for iOS
		}

		> input.n-trigger {
			width: 4em;
			height: 4em;
		}

		&:not([aria-expanded]) .n-fold--content {
			max-height: 0;
			max-width: 0;
		}

		> input.n-trigger:checked ~ .n-fold--content,
		> input.n-trigger:checked + .n-fold--content {
			// Android Browser doesn't support "~", only "+"

			max-height: none;
		}

		.n-fold--content {
			// hidden fold item

			overflow: hidden;
		}
	}

	@supports (--a: 1) {
		.n-header.n-header__fixed-mobile .n-fold.n-fold__mobile {
			position: fixed;
			top: 0;
			z-index: 2;

			&[aria-expanded] {
				bottom: 0;
				overflow: visible; // iPhone fix
				z-index: 4;

				.n-fold--content {
					overflow: auto;
					-webkit-overflow-scrolling: touch;
					position: fixed;
					top: 3em; // header height, shouldn't be hardcoded
					bottom: 0;
				}
			}

			.n-fold--content {
				padding: 0 $line-height-em/4;
				background: #fff;
			}
		}
	}
}

@media screen and (min-width: $screen-narrow) {
	.n-fold.n-fold__mobile {
		overflow: visible;
	}
}
/* niui  – Form */

@import "../../css/niui-setup";

$placeholder_color: #aaa;

.n-form {
	* {
		box-sizing: border-box;
	}

	label,
	input,
	textarea {
		display: inline-block;
		vertical-align: middle;
	}

	--placeholder_color: #aaa;

	::-webkit-input-placeholder {
		color: $placeholder_color;
		color: var(--placeholder_color);
		-webkit-text-fill-color: $placeholder_color;
		-webkit-text-fill-color: var(--placeholder_color);
	}

	input[type="submit"],
	button[type="submit"],
	label,
	.n-form--check span,
	label > span {
		line-height: $line-height;
		min-height: $line-height-em;
	}

	label {
		font-weight: bold;
		max-width: 100%;
		position: relative;
		padding: 0;
		margin: 0 0 $line-height-em 0;
		min-height: $line-height-em * 2;
	}

	input[type="submit"],
	button,
	button[type="submit"] {
		height: auto;
		line-height: $line-height;
		white-space: normal;
		word-break: break-all;
		margin: 0;
		max-width: 100%;
		padding: 0 1em;
		font-weight: bold;
	}

	input,
	select,
	textarea,
	input[type="search"],
	button {
		font-family: inherit;
		display: inline-block;
		overflow: hidden;
		resize: none;
		vertical-align: top;
		border-radius: 0;
		padding: 0 $line-height-em/2;
		min-height: $line-height-em * 2;
		border: 0;
		font-size: 1em;
		border: 1px dotted transparent;
		// 		color: inherit;
	}

	textarea {
		border-bottom: 1px dotted transparent;
		height: 0;
		min-height: $line-height-em * 3;
		// 		min-height: calc(var(--line-height-em) * 3);
		padding-top: $line-height-em/2;
		// 	padding-top: .85em;
		margin: $line-height-em 0;

		&:not([data-auto]) {
			overflow: auto;
		}

		&[data-auto] {
			transform: translate3d(0, 0, 0); // Fix for disappearing textarea after deleting its overflowed text
		}
	}

	input,
	textarea {
		background-color: #eee;
		background-color: var(--input-bg, #eee);
		color: #333;
		color: var(--input-color, #333);
	}

	select {
		-moz-appearance: none;
		-webkit-appearance: none;
		appearance: none;
		text-indent: 0.01px;
		text-overflow: "";
		min-height: 0;
		text-indent: 0px;
		padding: 0 1.6em 0 0.8em;
		height: $line-height-em * 2;
		white-space: nowrap;
		text-indent: -1px;
		text-overflow: "";
		margin: 0;
		text-indent: 1px;
		cursor: pointer;
		background-image: linear-gradient(-113deg, transparent 60%, var(--control-bg, #eee) 63%), linear-gradient(113deg, transparent 60%, var(--control-bg, #eee) 63%),
			linear-gradient(to bottom, var(--control-color, #333), var(--control-color, #333));
		background-size: 0.75em 0.75em;
		background-repeat: no-repeat;
		background-position: calc(100% - 0.5em) center;
		color: #333;
		color: var(--control-color, #333);
		background-color: #eee;
		background-color: var(--control-bg, #eee);

		option {
			padding: 0 1.5em 0 0;
		}
	}

	select,
	.n-form--file {
		vertical-align: top;
		border: none;
		margin-left: 0;
	}

	input[type="search"] {
		-webkit-appearance: none; // Prevent iOS from rounding the input edges
		border-radius: 0;

		&::-webkit-search-decoration,
		&::-webkit-search-cancel-button {
			-webkit-appearance: none;
		}
	}

	label,
	label span,
	.n-form--check span {
		margin: 0;
		text-align: start;
	}

	input,
	select {
		display: inline-block;
		width: auto;
		padding-top: 0;
		margin: $line-height-em 0;
		vertical-align: middle;
	}

	&.sticky-submit {
		position: relative;

		input[type="submit"],
		button[type="submit"] {
			position: absolute;
			top: 50%;
			right: 0;
			transform: translateY(-50%);
		}
	}

	.n-form--check {
		display: block;
		min-height: $line-height-em;
		margin-bottom: $line-height-em;

		span {
			display: inline-block;
			font-weight: bold;
			margin-top: 0;
			cursor: default;
		}

		&:after {
			content: "";
			display: block;
			clear: both;
		}

		label {
			text-align: start;
			font-weight: normal;
			clear: right;
			margin: 0;
			cursor: pointer;
			min-height: 0;
			-webkit-touch-callout: none;
			-webkit-user-select: none;
			-khtml-user-select: none;
			-moz-user-select: none;
			user-select: none;

			span {
				width: auto;
			}

			&:last-child {
				margin-bottom: 0;
			}

			input[type="checkbox"],
			input[type="radio"] {
				margin: -0.25em 0.2em 0 0;
			}
		}
	}

	.n-form--check-icon {
		width: 1em;
		height: 1em;
		display: inline-block;
		background-color: #eee;
		background-color: var(--control-bg, #eee);
		color: #333;
		color: var(--control-color, #333);
		line-height: ($line-height + 1) * (2/3);
		font-size: ($line-height - 2) * (2em/3);
		text-align: center;
		border: none;
		margin: 0;
		position: absolute;
		left: 0;
		z-index: 1;
		top: 0.05em;
		vertical-align: middle;
	}

	&.n-form__mast .n-form--check-icon {
		top: 0.25em;
	}

	&.n-form__wide .n-form--check-icon {
		top: 0.08em;
	}

	input[type="checkbox"] + .n-form--check-icon:before {
		content: "✓";
		opacity: 0;
		display: block;
		height: 1em;
		line-height: 1;
	}

	input[type="checkbox"]:checked + .n-form--check-icon:before {
		opacity: 1;
	}

	input[type="checkbox"],
	input[type="radio"] {
		-webkit-appearance: none;
		-moz-appearance: window;
		-ms-appearance: none;
		background: transparent;
		cursor: pointer;
		padding: 0;
		min-height: 0;
		height: 1em;
		width: 1em;
		display: inline-block;
		margin: 0;
		border: none;
	}

	input[type="radio"] + .n-form--check-icon {
		border-radius: 50%;
	}

	input[type="radio"]:checked + .n-form--check-icon:before {
		content: "";
		position: absolute;
		background-color: #333;
		background-color: var(--control-color, #333);
		top: 25%;
		right: 25%;
		bottom: 25%;
		left: 25%;
		border-radius: 50%;
	}

	.n-form__mandatory span.n-form--check:before,
	.n-form__mandatory span.tip:after,
	select::-ms-expand {
		display: none;
	}

	.n-form__mandatory {
		position: relative;

		&:before {
			content: "*";
			color: #a00;
			position: absolute;
			top: 0;
			font-weight: bold;
			left: auto;
			right: 0;
		}
	}

	.n-form--alert {
		span,
		p {
			background: #666;
			color: #eee;
			padding: 0 0.25em;
		}

		span.n-form--check {
			background: none;
			color: #555;
		}

		span.tip {
			background: #222;
		}

		/*
		input {
			
			background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 21 26' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg%3E%3Ctext%3E%3Ctspan x='0' y='20'%3E⚠️%3C/tspan%3E%3C/text%3E%3C/g%3E%3C/svg%3E");
			background-position: calc(100% - .5em) calc(50% - .1em);
			background-size: 1.25em;
			background-repeat: no-repeat;
			padding-inline-end: 2.5em;
			
		}

		input[type=checkbox] {

		    padding-inline-end: 3em;

		}
*/
	}

	.n-form--file {
		font-weight: normal;
		margin: 0 0 $line-height-em 0;
		cursor: pointer;
		font-style: italic;
		padding: 0;
		position: relative;
		z-index: 0;

		span {
			text-align: start;
			border: none;
			white-space: nowrap;
			overflow: hidden;
			background-color: #ddd;
			background-color: var(--control-bg, #ddd);
			color: inherit;
			color: var(--control-color, inherit);
			padding: 0 $line-height-em/2 0 0.75em;
			display: block;
			line-height: $line-height-em;
			padding-top: $line-height-em/2;
			letter-spacing: 0;

			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			z-index: -1;

			.n-form--file-tag {
				display: none;
			}

			.n-form--file-name:empty ~ .n-form--file-tag {
				display: block;
			}
		}

		input[type="file"] {
			width: 100%;
			cursor: pointer;
			border: none;
			margin: 0;
			background: transparent;
			color: transparent;
			text-indent: -100%;
			padding: 0;

			&:focus + span {
				outline: auto;
			}
		}
	}

	input[type="range"] {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		width: 100%;
		background: none;
		margin: 0;
		padding: 0;

		&::-webkit-slider-runnable-track {
			width: 100%;
			height: 0.7125em;
			cursor: pointer;
			background: var(--control-bg, rgba(0, 0, 0, 0.1));
		}

		&::-webkit-slider-thumb {
			height: 1.625em;
			width: 1.625em;
			border-radius: 50%;
			background: var(--control-highlight, #000);
			cursor: pointer;
			-webkit-appearance: none;
			margin-top: -0.45625em;
		}

		&:focus::-webkit-slider-runnable-track {
			background: var(--control-bg, rgba(0, 0, 0, 0.1));
		}

		&::-moz-range-track {
			width: 100%;
			height: 0.7125em;
			cursor: pointer;
			background: var(--control-bg, rgba(0, 0, 0, 0.1));
		}

		&::-moz-range-thumb {
			border: 0px solid rgba(0, 0, 0, 0);
			height: 1.625em;
			width: 1.625em;
			border-radius: 50%;
			background: var(--control-bg, rgba(0, 0, 0, 0.1));
			cursor: pointer;
		}

		/*
		&::-ms-track {
		
			width: 100%;
			height: .7125em;
			cursor: pointer;
			background: transparent;
			border-color: transparent;
			color: transparent;
		
		}
		
		&::-ms-fill-lower {
		
			background: rgba(0, 0, 0, 0.1);
		
		}
		
		&::-ms-fill-upper {
		
			background: rgba(0, 0, 0, 0.1);
		
		}
		
		&::-ms-thumb {
		
			border: 0px solid rgba(0, 0, 0, 0);
			height: 1.625em;
			width: 1.625em;
			border-radius: .9375em;
			background: var(--thumb-color);
			cursor: pointer;
			height: .7125em;
		
		}
		
		&:focus::-ms-fill-lower {
		
			background: rgba(0, 0, 0, 0.1);
		
		}
		
		&:focus::-ms-fill-upper {
		
			background: rgba(5, 5, 5, 0.1);
		
		}
*/
	}

	legend {
		padding: 0 0.5em;
	}

	fieldset {
		border: 1px solid;
		display: block;
		margin: $line-height-em/2 0;

		input:last-of-type {
			margin-bottom: $line-height-em/3;
		}

		&[disabled] {
			display: none;
		}
	}

	input[type="submit"],
	button {
		width: auto;
		min-width: 0;
		padding: 0 1em;
		min-height: $line-height-em * 1.6667;
		text-align: start;
		font-size: 1.2em;
	}

	&.n-form__wide textarea,
	&.n-form__mast textarea {
		margin: -$line-height-em/2 0 $line-height-em/2 0;
	}

	&.n-form__wide {
		input[type="submit"],
		button,
		button[type="submit"] {
			margin-bottom: calc(#{$line-height-em} - 5px); /* fix for the failed box-sizing: border-box */
			// 		margin-bottom: calc(var(--line-height-em) - 2px); /* fix for the failed box-sizing: border-box */
			//		min-height: calc(#{$line-height-em}*2 - 2px);
			// 		min-height: calc(var(--line-height-em)*2 + 2px);
			line-height: 2 * $line-height-em/3;
			font-size: 1.2em;
			min-height: 2.50005em;
			width: 100%;
		}

		select {
			width: 100%;
			height: $line-height-em * 2;
			// 		height: calc(var(--line-height-em) * 2);
			margin: -$line-height-em/2 0 $line-height-em/2 0;
			// 		margin: calc(-1*var(--line-height-em)/2) 0 calc(var(--line-height-em)/2) 0;
		}

		label,
		label span,
		.n-form--check span,
		label,
		.n-form--file {
			display: block;
			width: 100%;
			clear: both;
		}

		&:not(.sticky-submit) input:not([type="checkbox"]):not([type="radio"]),
		textarea,
		select {
			display: block;
			width: 100%;
			border: none;
			margin: 0 0 $line-height-em 0;
		}

		.n-form--check label {
			input[type="checkbox"],
			input[type="radio"] {
				margin-top: -0.2em;
			}
		}
	}

	&.n-form__mast {
		input[type="submit"],
		button,
		button[type="submit"] {
			margin-left: 50%;
			margin-bottom: $line-height-em * 1.5;
		}

		label {
			width: 100%;

			> input {
				margin-top: -$line-height-em/2;
			}
		}

		> label > *,
		> .n-form--check > * {
			width: 50%;
			float: right;
			margin: -$line-height-em/2 0 $line-height-em * 1.5 0;
		}

		> label > span,
		> .n-form--check > span {
			width: 50%;
			text-align: right;
			padding-right: 1em;
			float: left;
			margin: 0;
		}

		> .n-form--check > * {
			margin: 0;
		}

		.n-form__mandatory:before {
			left: calc(50% - 1em);
			z-index: -1;
		}
	}

	&.n-form__language {
		select {
			height: auto;
			width: 100%;
			background-position: calc(100% - 0.5em);
			margin-left: 0;
			height: $line-height-em * 2;
			line-height: $line-height-em * 2;
			margin: 0;
		}

		input[type="submit"] {
			min-height: 1em;
			padding: 0 0.5em;
		}
	}
}

// IE

_:-ms-input-placeholder,
:root input[type="radio"] + .n-form--check-icon,
.n-form.n-form__wide .n-form--check-icon,
.n-form .n-form--file input[type="file"] {
	top: 0.33em;
	text-indent: 0;
	padding: 0;
}

// Edge

_:-ms-lang(x),
input[type="radio"] + .n-form--check-icon,
.n-form.n-form__wide .n-form--check-icon,
.n-form .n-form--file input[type="file"] {
	top: 0.33em;
	text-indent: 0;
	padding: 0;
}

[dir="rtl"] .n-form {
	.n-form__mandatory:before {
		left: 0;
		right: auto;
	}

	&.n-form__mast .n-form__mandatory:before {
		right: calc(50% - 1em);
		left: auto;
	}
}

@-moz-document url-prefix() {
	// FF fixes

	.n-form {
		select {
			padding-left: 0;
			text-indent: 0.3em;

			option {
				padding: 0;
			}
		}

		input::-moz-focus-inner,
		button::-moz-focus-inner {
			padding: 0;
			border: 0;
		}

		input[type="text"],
		input[type="email"],
		input[type="url"] {
			padding-top: 0;
		}

		span {
			margin-top: -1px;
		}

		input[type="file"] {
			padding-left: 100%;
			text-indent: -1em;
			margin-top: -$line-height-em;
		}
	}
}

@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
	/* IE10 */

	.n-form input[type="file"] {
		margin-left: -100%;
	}
}

:root .n-form .n-form--check label {
	/* Not IE9 */

	padding-left: 0;
	padding-bottom: 0;
	display: inline;
}

[dir="rtl"] .n-form select {
	padding-left: 0;
	padding-right: 0.8em;
}

@supports (--a: 1) {
	// Cut out IE because of drop nav

	.n-form {
		padding: $line-height-em 0;
	}
}
// Rich select

/*
	
Theme:

--control-color: red;
--control-bg: lightgoldenrodyellow;

--control-active-color: chocolate;
--control-active-bg: beige;

--control-highlight: red;

*/

@keyframes n-select {
	100% {
		visibility: hidden;
	}
}

@keyframes n-select-native {
	100% {
		visibility: visible;
	}
}

body.n-select--open {
	/*
	overflow: hidden;
	-webkit-user-select: none;
	user-select: none;
*/
}

.n-select {
	position: relative;
	height: var(--active-option-height, auto);
	display: inline-grid;
	vertical-align: middle;
	max-width: 100%;
	width: var(--width, auto);
	line-height: 1.3;
	z-index: 0;
	background-color: var(--control-bg, #fff);

	&[data-ready] {
		font-size: 1em;
		transition: height 0.2s ease-in-out;

		> .n-select__options > :not([aria-selected]) {
			height: 0;
			padding-top: 0;
			padding-bottom: 0;
			visibility: hidden;
			overflow: hidden;
			display: block;
		}
	}

	&:before {
		content: "";
		position: absolute;
		cursor: pointer;
		background-color: var(--control-color, #333);
		--chevron: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Cpath d='M16.003 18.626l7.081-7.081L25 13.46l-8.997 8.998-9.003-9 1.917-1.916z'/%3E%3C/svg%3E");
		-webkit-mask: var(--chevron) no-repeat 0 0 / contain;
		mask: var(--chevron) no-repeat 0 0 / contain;
		width: 0.75em;
		height: 0.75em;
		right: 0.4em;
		top: calc(50% - 0.375em);
		z-index: -1;
	}

	&:after {
		position: absolute;
		top: 0;
		z-index: 5;
	}

	&:not([data-ready]) {
		// If no init in 2", display native fallback

		.n-select__options,
		select {
			animation-duration: 0.1s;
			animation-fill-mode: forwards;
			animation-delay: 2s;
		}

		select {
			-webkit-appearance: none;
			appearance: none;
			border: none;
			padding: 0;
			width: 100%;
			padding-inline-start: 0.5em;
			padding-inline-end: 1.961em;
			line-height: 2.25;
			height: auto;
			margin: 0;
			background: none;
			visibility: hidden;
			animation-name: n-select-native;
		}

		.n-select__options {
			display: inline-grid;

			> * {
				grid-column: 1/2;
				grid-row: 1/2;
			}

			> :not(:first-child):not([aria-selected]) {
				opacity: 0;
			}
		}
	}

	> input {
		display: none;
	}
}

.n-select__options,
.n-select {
	--padding: 0.5em;
}

.n-select__options,
.n-select select {
	width: auto;
	max-width: 100%;
	color: var(--control-color, #333);
	background-color: transparent;
	top: 0;
	z-index: 5;
	box-sizing: border-box;
	-webkit-appearance: none;
	appearance: none;
	font: inherit;
	border-radius: 0;
	border: none;

	grid-column: 1/1;
	grid-row: 1/1;
	overflow: hidden;
}

.n-select select {
	padding: var(--padding, 0.5em);
	padding-inline-end: 1.961em;
	cursor: pointer;

	~ .n-select__options {
		animation-name: n-select;
	}
}

.n-select__options {
	> * {
		display: block;
		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-khtml-user-select: none;
		-moz-user-select: none;
		user-select: none;
	}

	button {
		-webkit-appearance: none;
		appearance: none;
		background: none;
		cursor: pointer;
		border: 0;
		width: 100%;
		text-align: start;
		margin: 0;
		font-size: 1em;
		position: relative;
		color: var(--control-color, #333);
		background-color: var(--control-bg, #fff);

		* {
			pointer-events: none; // Disable dragging of images inside the option
			vertical-align: middle;
		}

		img {
			// Must have default dimensions to avoid layout jump while loading

			width: 2em;
			height: 2em;
			margin-inline-end: 0.5em;
		}
	}

	&.n-scrollbar {
		&::-webkit-scrollbar {
			width: 0.333em;
		}

		&::-webkit-scrollbar-thumb {
			background: #999;
			border-radius: 0.333em;
		}

		&::-webkit-scrollbar-track {
			background: #eee;
			border-radius: 0.333em;
		}

		scrollbar-width: 0.333em;
		scrollbar-color: #999 #eee;
	}

	&[aria-expanded] {
		position: absolute;
		margin-top: calc(-1px * (var(--active-option-offset, 0) - var(--top-offset, 0)) - 1px * var(--scroll-help-top, 0)); // Align to the current option's vertical offset
		max-height: var(--max-height);
		overflow: auto;
		background: transparent;
		padding: 0 1em;
		margin-inline-start: -1em;
		left: calc(1px * var(--body-offset-x));
		top: calc(1px * var(--body-offset-y));
		box-sizing: content-box;

		min-width: var(--max-width); // For when the closed select is wider than the options

		> :first-child {
			margin-top: 1em;
		}

		> :last-child {
			margin-bottom: 1em;
		}

		&.n-select--crop-top {
			top: calc(1px * var(--body-offset-y));
			margin-top: calc(-1px * (var(--active-option-offset, 0) - var(--top-offset, 0)) - 1px * var(--scroll-help-top, 0)); // Align to the current option's vertical offset
		}

		&:not(.n-select--crop-top) {
			// Already taken whole upper space

			padding-top: calc(1px * var(--scroll-help-top, 0));

			&:before {
				margin-top: calc(1px * var(--scroll-help-top, 0));
			}
		}

		[aria-selected] {
			background-color: var(--control-active-bg, #eee);
			color: var(--control-active-color, #000);
		}

		button,
		a[href] {
			line-height: 1.3;
			width: 100%;
			box-sizing: border-box;

			&:not([aria-selected]) {
				&:hover {
					background-color: var(--control-highlight, #ececec);
					color: var(--control-active-color, inherit);
				}
			}

			&:focus {
				z-index: 1;
			}
		}

		&:before {
			content: "";
			position: absolute;
			background-color: var(--control-bg, #fff);
			top: 1em;
			left: 1em;
			right: 1em;
			height: calc(var(--select-scroll-height) - 2 * 1em);
		}

		&.n-select--scroll-help-top:before {
			height: calc(100% + 1px * var(--top-offset, 0));
		}

		&.n-select--shadow:before {
			box-shadow: 0 0 2px 2px #333;
		}
	}

	&:not([aria-expanded]) {
		cursor: pointer;

		button {
			white-space: nowrap;
			overflow: hidden;
			max-width: calc(100% - 1.5em);
			width: auto;
			margin: 0;
			outline-offset: -1.5px;
			font-size: 1em;
			border: none;
			padding: 0.5em;
			padding-inline-end: 2em;
			line-height: 1.3;
			font-weight: normal;
			min-height: 0;
			color: var(--control-color, #333);
			background: none;
		}
	}

	> * {
		padding: 0.5em;
		padding-inline-end: 2em;
		position: relative; // To show it above the background
		font-family: inherit; // iOS bug
	}
}

select[data-n_select],
.n-select[data-ready] select,
.n-select[data-ready] + select {
	// Hide the associated native select, which can be specified in 3 different ways

	display: none;
}

.n-form__wide {
	.n-select,
	.n-select__options,
	.n-select select {
		width: 100%;
	}
}

// Animation

.n-select__options[aria-expanded] {
	-webkit-mask: linear-gradient(0, #000, #000) no-repeat 0 calc((var(--mask-position-y) + var(--scroll-help-top, 0)) * 1px) / calc(var(--max-width) + 0.5em) var(--mask-size-y);

	&[data-n-select-animation] {
		transition: -webkit-mask-size 0.15s ease-in-out, -webkit-mask-position-y 0.15s ease-in-out;
		-webkit-mask-size: 100% 100%;
		-webkit-mask-position-y: 0;
	}
}

@media (prefers-reduced-motion: reduce) {
	.n-select__options[aria-expanded][data-n-select-animation] {
		transition: none;
	}
}

@media (min-width: 600px) {
	.n-select .n-select__options[aria-expanded] {
		width: calc(var(--max-width) + var(--padding));
	}
}
/* niui – Grid with inline popups */

@import "../../css/niui-setup";

// Grid with inline popup

.grid-inline-popup {
	> .grid-inline-popup--popup {
		width: 100%;
		flex-basis: 100%;
		order: 0;
		will-change: max-height;
		/* avoid glitchy animation: */
		margin-top: 0;
		margin-bottom: 0;
		padding-top: 0;
		padding-bottom: 0;

		&:not([aria-expanded]) {
			display: none;
		}
	}

	> div:not(.grid-inline-popup--popup) {
		cursor: zoom-in;

		&[aria-expanded] {
			cursor: zoom-out;
		}
	}

	&:not([data-ready]) > div:not(.grid-inline-popup--popup):focus + .grid-inline-popup--popup {
		display: block;
	}
}

@media (max-width: $screen-narrow-max) {
	.n-row.grid-inline-popup > * {
		margin: 0;
	}
}
/* Image aspect ratio – don't shift the page after loading the image */

$selector: ".n-aspect";

@supports (--a: 1) {
	#{$selector} {
		// aspect ratio is specified as this element's --ratio CSS variable

		flex-direction: row;
		align-items: flex-start;
		overflow: hidden;
		position: relative;
		text-align: center;

		display: inline-flex;
		justify-content: center; // When aspect inside aspect, like an inline lightbox
		vertical-align: top; // Lose the unwanted spacing at the bottom
		width: calc(1px * var(--width, 100%)); // Number without 'px'
		max-width: 100%;
		text-align: start;

		> img {
			max-width: 100%;
			height: auto;
			margin: 0 auto;
		}

		&:before {
			content: "";
			padding-top: calc(100% * 1 / (var(--width) / var(--height))); // Number without 'px'
		}

		&[style*="--ratio"],
		&#{$selector}--ratio {
			width: calc(1px * var(--width, 10000)); // Magic number to achieve 100%, because max-width will kick in
			max-width: 100%;

			&:before {
				// When ratio is specified with inline style, use it instead of width/height

				padding-top: calc(100% * 1 / var(--ratio, 1.7778)); // Default 16:9
			}
		}

		&.n-bottom > * {
			align-self: flex-end;
			vertical-align: bottom;
		}

		&.n-middle > * {
			align-self: center;
			vertical-align: middle;
		}
	}
}
/* niui – Grid */

@import "../../css/niui-setup";

/* For proper fallback, use .col* for all columns. Automatic column width (no .col*) works for Flexbox only. */

.n-row {
	width: 100%;
	display: -ms-flexbox;
	display: flex;
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
	text-align: center;

	// 	> div > img, > div > div > img, > div > picture, > div > div > picture, > div > picture > img, > div > div > picture > img {
	img,
	picture {
		max-width: 100%; // Prevent images overflowing
		height: auto;
		border: none;
		text-align: center;
	}

	video {
		height: auto;
		background: #000;
		margin: 0 auto;
		display: block;
		max-width: 100%;

		a[href] {
			color: #fff;
		}
	}

	table:not(.n-table) td {
		// Non-niui tables overflow fix

		word-break: break-word;
	}
}

.n-row > * {
	position: relative;
	word-wrap: break-word;
	width: calc(20% - #{$line-height-em});
	--col-width: 1/5; // Minimum auto column width is 20%
	padding: calc(#{$line-height-em/4});
	margin: calc(#{$line-height-em/4});
	flex-grow: 1;
	text-align: left;
	text-align: start;
	box-sizing: content-box; // IE11 padding. To do: only for IE11-
	min-width: 0; // FF flex-basis bug fix for when a column child is wider than the column
}

@-moz-document url-prefix() {
	.n-row > * {
		margin: calc(#{$line-height-em/4} - 0.0009em); // FF odd font-size grid fix
	}
}

.n-row > [class^="_"],
.n-row > [class*=" _"] {
	// If it has a col* class

	flex-grow: 0;
}

.n-row:before,
.n-row:after {
	// Clear margins before/after a row

	content: "";
	display: table;
	width: 100%;
}

.n-row > *,
.n-row > * > * {
	max-width: 100%; /* instead of overflow-x:hidden, which would also activate overflow-y:hidden and clip the tooltip */
}

.n-row > * > img {
	display: block;
	margin: 0 auto;
}

/* colXY where the column takes up X/Y of space; colY means 1/Y */

// CSS Variables grid with only 1 line per column variant. To do: fallback.

.n-row > ._2\/3 {
	--col-width: 2/3; // or with inline style without the need for column classes
	flex-basis: calc(66.667% - #{$line-height-em}); // Fallback for browsers not supporting CSS variables
}

.n-row > ._3\/4 {
	--col-width: 3/4;
	flex-basis: calc(75% - #{$line-height-em});
}

.n-row > ._1\/4 {
	--col-width: 1/4;
	flex-basis: calc(25% - #{$line-height-em});
}

.n-row > ._1\/5 {
	--col-width: 1/5;
	flex-basis: calc(20% - #{$line-height-em});
}

.n-row > ._1\/6 {
	--col-width: 1/6;
	flex-basis: calc(16.667% - #{$line-height-em});
}

.n-row > ._2\/5 {
	--col-width: 2/5;
	flex-basis: calc(40% - #{$line-height-em});
}

.n-row > ._3\/5 {
	--col-width: 3/5;
	flex-basis: calc(60% - #{$line-height-em});
}

.n-row > ._4\/5 {
	--col-width: 4/5;
	flex-basis: calc(80% - #{$line-height-em});
}

.n-row > ._1\/3 {
	--col-width: 1/3;
	flex-basis: calc(33.333% - #{$line-height-em});
}

.n-row > ._1\/2 {
	--col-width: 1/2;
	flex-basis: calc(50% - #{$line-height-em});
}

.n-row > ._1\/1,
.n-row > *:only-child:not([class^="_"]) {
	// ._1/1 or a single classless item

	--col-width: 1;
	flex-basis: calc(100% - #{$line-height-em});
}

@supports (--a: 1) {
	// Overwrite the fallback flex-basis with CSS variable
	.n-row > *,
	.n-row > [class^="_"] {
		--spacing: #{$line-height-em};
		flex-basis: calc(var(--col-width) * 100% - var(--spacing));
	}

	@media screen and (max-width: 1024px) {
		.n-row > * {
			--col-width: 1/5;
		}
	}

	@media screen and (max-width: $screen-limited-max) {
		.n-row > * {
			--col-width: 1/3;
		}
	}

	.n-row.n-row__no-padding,
	.n-row.n-row__no-padding > * {
		--spacing: #{$line-height-em/2};
		padding: 0;
	}

	.n-row.n-row__no-margin,
	.n-row.n-row__no-margin > *,
	.n-row.n-row__vertical > * {
		--spacing: #{$line-height-em/2};
		margin: 0;
	}

	.n-row.n-row__no-spacing > * {
		--spacing: 0em;
		padding: 0;
		margin: 0;
	}

	.n-row.n-row__spacing-horizontal > * {
		margin: 0 $line-height-em/2;
	}

	.n-row.n-row__spacing-vertical > * {
		margin: $line-height-em/2 0;
	}
}

.n-left,
.n-left > *,
.n-row > .n-left {
	text-align: left;
	text-align: start;
}

.n-right,
.n-right > *,
.n-row > .n-right {
	text-align: right;
	text-align: end;
}

.n-center,
.n-center > *,
.n-row > .n-center {
	text-align: center;
}

.n-row > .n-top,
.n-row > .n-middle,
.n-row > .n-bottom {
	display: inline-block;
	display: flex;
}

.n-row > .n-top,
.n-top.n-row > * {
	vertical-align: top;
	justify-content: flex-start;
	flex-direction: column;
	display: flex;
}

.n-row > .n-middle,
.n-middle.n-row > * {
	vertical-align: middle;
	justify-content: center;
	flex-direction: column;
	display: flex;
}

.n-row > .n-bottom,
.n-bottom.n-row > * {
	vertical-align: bottom;
	justify-content: flex-end;
	flex-direction: column;
	display: flex;
}

.n-align-children *,
.n-row.n-align-children > * {
	text-align: inherit;
}

.n-row.n-row__vertical {
	flex-direction: column;
	min-height: 100%;

	> *,
	> [class^="_"],
	> [class*=" _"] {
		width: 100%;
		box-sizing: border-box;
	}
}

.n-section {
	position: relative;

	&:before,
	&:after {
		// Prevent inner edge margins from creating blank space between sections

		content: "";
		display: table;
		width: 100%;
	}
}

/* Masonry in CSS only */

.n-masonry {
	-moz-column-count: 3;
	-moz-column-gap: 0;
	-webkit-column-count: 3;
	-webkit-column-gap: 0;
	column-count: 3;
	column-gap: 0;
	margin: $line-height-em 0;

	> * {
		display: table; // Unwanted wrapping in Chrome – 2 instead of 3 columns
		width: 100%;
		-webkit-column-break-inside: avoid;
		page-break-inside: avoid; /* FF 20+ */
		break-inside: avoid-column;
		margin: 0;
		padding: $line-height-em/2;
		box-sizing: border-box;
		word-break: break-word; // Overflow protection for long words
		word-wrap: break-word;
	}

	&._1\/2 {
		-moz-column-count: 2;
		-webkit-column-count: 2;
		column-count: 2;
	}

	&._1\/4 {
		-moz-column-count: 4;
		-webkit-column-count: 4;
		column-count: 4;
	}

	&._1\/4 {
		-moz-column-count: 5;
		-webkit-column-count: 5;
		column-count: 5;
	}
}

ul.n-masonry {
	min-height: 0;
	padding: 0;
}

ol.n-masonry > * {
	padding-left: 2.5em;
}

.n-pad {
	padding: $line-height-em/2;
	box-sizing: border-box;
}

.n-pad-half {
	padding: $line-height-em/4;
	box-sizing: border-box;
}

.n-unpad,
.n-row > * > .n-unpad {
	margin: #{-$line-height-em/2};
	width: calc(100% + #{$line-height-em});
	max-width: 100%;
	overflow-x: hidden;
}

.n-row > * > .n-unpad {
	max-width: none;
}

.n-unpad-vertical {
	margin: -$line-height-em 0;
}

.n-row.n-row__border-all {
	--color: #000;
	box-shadow: inset 0 0 0 1px var(--color);

	> * {
		box-shadow: inset 1px 1px 0 0 var(--color);
		margin: 0;
		flex-basis: calc(var(--col-width) * 100% - var(--spacing) / 2);
	}
}

.n-row.n-row__border {
	--color: #000;
	box-shadow: inset 0 0 0 1px var(--color);
}

.n-row * .n-box {
	/* Boxes inside grid cells */

	background: #fff;
	box-shadow: inset 0 0 0 1px #e6e6e6;
}

.n-row.n-row__border-off,
.n-row.n-row__border-off * {
	box-shadow: none;
}

@media screen and (max-width: $screen-narrow-max) {
	.n-row {
		box-sizing: border-box;
	}

	.n-row:not(.n-row__half) {
		// To do: revert to flex in order to use the order property on mobile

		display: block;
		//		overflow-x: hidden; // Breaks tooltip
		max-width: 100%;

		> * > .n-unpad {
			margin: -0.6em 0 -0.6em -0.3em;
			width: calc(100% + 0.6em);
			max-width: none;
		}
	}

	.n-row > *,
	.n-row > [class^="_"] {
		padding: 0;
		width: 100%; // Important because of Android Browser
		border: none;
		box-sizing: border-box;
	}

	.n-row:not(.n-row__no-margin):not(.n-row__border-all):not(.n-tabs):not(.grid-inline-popup) > *,
	.n-row:not(.n-row__no-margin):not(.n-row__border-all) > [class^="_"] {
		margin: $line-height-em/6 0;
		display: block;
	}

	@supports (--a: 1) {
		.n-row > *,
		.n-row > [class^="_"] {
			padding: 0.3em;
			flex: 0 0 100%;
		}
	}

	.n-row > *:empty {
		display: none;
	}

	.n-row > .n-full-mobile-width,
	.n-row > [class^="_"].n-full-mobile-width {
		box-sizing: content-box;
		padding: 0;
	}

	.n-row.n-row__no-spacing > *,
	.n-row.n-row__no-spacing > [class^="_"] {
		margin: 0;
		padding: 0;
	}

	.n-row__no-mobile-gutter.n-row > * {
		padding: 0;
	}

	.n-row > *,
	.n-row.n-row__border,
	.n-row.n-row__border > * {
		border: none;
	}

	.n-row.n-row__half > * {
		width: 50%;
		flex: 0 0 50%;
	}

	.n-row.n-row__border-all .n-row {
		width: calc(100% + #{$line-height-em});
	}

	/*
	.n-row.n-row__border-all > *, .n-row.n-row__border-all .n-row {
	
		margin: 0;
		padding: 0;
		width: 100%;
		overflow: hidden;
	
	}
*/

	.n-masonry {
		&,
		&[class^="_"] {
			-moz-column-count: 2;
			-webkit-column-count: 2;
			column-count: 2;
		}
	}
}
/* niui – Lightbox */

@import "../../css/niui-setup";

.n-slider--wrap:not([data-active]) > .n-slider.n-slider__vertical.n-lightbox > * {
	height: 100%;
}

*:not(.aspect) > .n-slider--wrap > .n-slider.n-slider__vertical.n-lightbox.n-lightbox__inline[data-sliding]:not(.n-slider__overlay) > * {
	height: auto;
}

.n-lightbox {
	a {
		max-width: 100%;
		height: auto;
		border: none;
		text-align: center;

		&:focus {
			z-index: 1;
		}

		img {
			display: block;
			margin: 0 auto;
			max-width: 100%;
		}
	}

	&:not(.n-slider) {
		margin-left: -$line-height-em/4;
		width: calc(100% + #{$line-height-em/2});
		max-width: none;

		a {
			display: inline-block;
			vertical-align: middle;
			margin: $line-height-em/4;
			position: relative;
		}
	}

	&.n-slider {
		img {
			cursor: zoom-in;
			max-width: 100%;
			transition: opacity 0.2s ease-in-out;
		}

		&[data-ready] {
			img {
				height: auto; // Override CSS-only height to avoid horizontal squash
				width: auto;
			}

			> div:not(.n-lightbox--loaded) img {
				opacity: 0;
			}

			&[data-peek]:not(.n-slider__vertical).n-slider__overlay > div:not([data-active]) {
				display: flex;
			}
		}

		> * {
			text-align: center;
			position: relative;

			&:before {
				display: none;
			}

			p.n-lightbox--caption {
				/* Image captions */

				position: absolute;
				top: 0.5em;
				margin: 0;
				text-align: center;
				color: #fff;
				left: 50%;
				transform: translateX(-50%);
				padding: 0 0.25em;
				background: rgba(0, 0, 0, 0.4);
			}

			> iframe {
				width: 100%;
				height: 100%;
				background: #fff;
			}

			> .n-aspect {
				margin: 0 auto;
			}
		}

		&.n-lightbox__inline[data-ready] > * {
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			overflow: hidden;
		}

		&.n-slider__overlay {
			> * {
				height: 100%;
				overflow: hidden;
				display: flex;
				flex-direction: column;
				justify-content: center;
			}

			&.n-slider__vertical > *:not([data-active]) {
				display: none;
			}

			> [data-active] {
				display: flex;

				> img.n-lightbox--zoom {
					width: auto;
					height: auto;
					max-height: none;
					max-width: none;
					position: absolute;
					top: 50%;
					bottom: 50%;
					left: 50%;
					right: 50%;
					transition: transfrom 0.2s linear;
					cursor: zoom-out;
					zoom: 0;
					transform: translate3d(var(--x), var(--y), 0);
				}
			}
		}

		video {
			display: inline-block;
			width: 100%;
			max-height: 100%;
			vertical-align: middle;
		}

		&.n-slider__top > * p {
			/* Image captions */

			bottom: 0;
		}

		a.n-btn.n-lightbox--copy {
			position: absolute;
			top: $line-height-em/2;
			right: 0;
			margin: 0;
			color: transparent;
			text-shadow: 0 0 #fff;
			transform: translate3d(0, 0, 0); // Safari bug: hidden during slide

			&:before {
				content: "🔗";
			}
		}

		&[data-ready] > [data-active]:not(.n-lightbox--no-image):not(.n-lightbox--loaded):after {
			// Loading spinner

			content: "";
			position: absolute;
			display: block;
			top: calc(50% - 20px);
			left: calc(50% - 20px);
			width: 40px;
			height: 40px;
			background-color: #999;
			border-radius: 100%;
			animation-fill-mode: forwards;
		}
	}
}

[data-active] > .n-lightbox.n-slider[data-ready] > div[data-active] > img:not(.n-lightbox--zoom) {
	// Don't flash the next slide and have the image visible immediately

	transform: translate3d(0, 0, 0);
}

[data-active] > .n-lightbox.n-slider > * p.n-lightbox--caption {
	will-change: transform; // Safari fix for disappearing while sliding
}

// Safari doesn't do the loop properly:

.n-lightbox.n-slider[data-ready] > [data-active]:not(.n-lightbox--no-image):not(.n-lightbox--loaded):after {
	animation: sk-scaleout 1s 9 ease-in-out;
}

/*
[data-nui-safari] .n-lightbox.n-slider[data-ready] > [data-active]:not(.n-lightbox--no-image):not(.n-lightbox--loaded):after {
	
	animation-iteration-count: infinite;
	
}
*/

.n-lightbox.n-slider.n-slider__top > * p.n-lightbox--caption {
	bottom: 0.5em;
	top: auto;
}

.n-aspect > .n-slider--wrap > .n-slider.n-lightbox.n-lightbox__inline img {
	position: absolute;
	max-width: 100%;
	max-height: 100%;
	object-fit: contain;
}

.n-slider--wrap.n-slider__top:not(.n-slider__outside)
	> .n-slider.n-lightbox.n-lightbox__thumbnails:not(.n-slider__vertical):not(.n-slider__detached-nav):not(.n-slider__top)
	> *
	p.n-lightbox--caption {
	bottom: 0.5em;
	top: auto;
}

.n-slider.n-lightbox.n-slider__detached-nav > * p,
.n-slider--wrap.n-slider__outside .n-slider.n-lightbox > * p {
	bottom: 0;
	top: auto;
	margin-bottom: 0.5em;
}

.can-touch .n-lightbox.n-slider > * > iframe {
	pointer-events: none; // Restore lightbox swiping on touch. To do: also allow iframe scrolling.
}

@keyframes sk-scaleout {
	// Loading spinner animation. Thanks to SpinKit

	0% {
		transform: scale(0);
		opacity: 0;
	}

	50% {
		transform: scale(1);
		opacity: 1;
	}

	100% {
		transform: scale(0);
		opacity: 0;
	}
}

@supports (--a: 1) {
	.n-lightbox a.n-lightbox--video:before {
		content: "▸";
		border: 1px solid #999;
		position: absolute;
		min-width: 1.5em;
		text-align: center;
		font-size: 2em;
		line-height: 1em;
		background: rgba(255, 255, 255, 0.8);
		top: 50%;
		transform: translate3d(-50%, -50%, 0);
		left: 50%;
	}
}

.n-lightbox__thumbnails {
	&.n-slider--nav * {
		line-height: var(--thumb-size, 4em);
		width: var(--thumb-size, 4em);
		min-height: var(--thumb-size, 4em);
		background-size: cover;
		border-radius: 0;
		cursor: zoom-in;
		outline-offset: -6px;
	}

	&.n-slider--nav [data-active] {
		opacity: 0.25;
		transition: opacity 0.2s ease-in-out;
	}
}

.n-slider__outside:not(.n-slider__vertical) {
	.n-slider--nav {
		position: static;
		transform: none;
		width: calc(100% + 1em);
		max-width: none;
		margin: 0.5em 0 0 -0.5em;
	}
}

.n-aspect > .n-lightbox__thumbnails.n-slider--wrap > .n-slider.n-slider__vertical[data-ready] > * > p.n-lightbox--caption {
	height: auto;
}

.n-lightbox__thumbnails.n-slider--wrap > .n-slider.n-slider__vertical[data-ready] > * > p.n-lightbox--caption {
	top: auto;
	bottom: 3em;
}

@media (max-height: 512px) and (orientation: landscape) {
	.n-lightbox.n-slider a.n-btn.n-lightbox--copy {
		top: 0;
	}

	.n-slider__overlay.n-slider--wrap.n-slider__vertical > .n-slider--nav {
		padding-top: 3em;
		box-sizing: border-box;
	}
}

@media (max-height: $screen-narrow-max) {
	div.n-lightbox__thumbnails.n-slider--wrap {
		.n-slider--nav {
			/*
			*, [data-active] {
		
				line-height: 1.5;
				width: 1.5em;
				min-height: 1.5em;
				color: transparent;
				text-shadow: none;
				
			}
*/

			display: none; // Screen too small for thumbnails
		}

		&:not(.n-slider__top) .n-slider.n-lightbox > * p.n-lightbox--caption,
		.n-slider.n-lightbox.n-lightbox__thumbnails:not(.n-slider__vertical):not(.n-slider__detached-nav):not(.n-slider__outside):not(.n-slider__top) > * p.n-lightbox--caption {
			bottom: auto;
			// 		    top: -1.5em;
			top: 0;
		}

		.n-slider.n-lightbox.n-slider__vertical > * p.n-lightbox--caption {
			bottom: 3em;
			top: auto;
		}

		&.n-slider__vertical.n-slider__outside.n-slider__right {
			padding-right: 2em;
		}

		&.n-slider__vertical.n-slider__outside:not(.n-slider__right) {
			padding-left: 2em;
		}
	}
}
/* niui – List */

@import "../../css/niui-setup";

ul.n-list {
	padding: 0;
	line-height: $line-height;
	min-height: $line-height-em;
	margin: $line-height-em/2 0 $line-height-em/2 0;

	&.n-list--indent {
		margin-inline-start: 1.5em;
	}

	li {
		display: block;
		position: relative;
		width: 100%;
		list-style: none;
		word-break: break-word; // Overflow protection for long words
		word-wrap: break-word;
	}

	&:not(.n-list__no-bullet):not(.n-list__inline) li {
		margin-inline-start: 1em;
		max-width: calc(100% - 1em);

		&:before {
			content: "•";
			position: absolute;
			margin-inline-start: -0.67em;
			color: var(--list-bg);
			font-size: 1.5em;
			line-height: 0.9;
		}
	}

	&.n-list__inline > li:first-child {
		margin-inline-start: 0;
	}
}

ol.n-list {
	list-style-type: none;
	counter-reset: level1;
	padding: 0;
	margin: 0 0 $line-height-em 0;

	> li {
		text-indent: -2.3em;
		margin: $line-height-em 0 $line-height-em/2 2.3em;

		&:before {
			content: counter(level1);
			counter-increment: level1;
			font-weight: bold;
			background: #999;
			background: var(--list-bg, #999);
			color: #fff;
			color: var(--list-color, #fff);
			padding: 0 0.5em;
			border-radius: 50%;
			margin-inline-end: 0.333em;
			min-height: 1em;
			display: inline-block;
			text-indent: 0;
			text-align: center;
		}
	}

	li > * {
		text-indent: 0;
		display: inline-block;
		vertical-align: top;
		padding-top: 0;
		margin-top: 0;
	}

	li > ul {
		display: block;
	}

	> li ol {
		list-style-type: none;
		counter-reset: level2;
		display: block;
	}

	> li ol > li:before {
		content: counter(level1) "." counter(level2) " ";
		counter-increment: level2;
		border-radius: 1em;
	}

	ol > li ol {
		list-style-type: none;
		counter-reset: level3;
		margin-inline-start: 1em;

		li:before {
			content: counter(level1) "." counter(level2) "." counter(level3) " ";
			counter-increment: level3;
		}
	}

	ol > li {
		text-indent: -3.3em;
		// 		overflow-x: hidden;
	}

	ol ol > li {
		text-indent: -3.95em;
	}

	ul {
		text-indent: 0.1em;
	}

	p {
		text-indent: 0;
	}
}

ul.n-list.n-list__inline,
ul.n-list.n-list__inline li,
.n-nav.n-nav__scroll ul li {
	vertical-align: top;
	display: inline-block;
	width: auto;
}

.n-nav ul.n-list {
	&:not(.n-list__no-bullet):not(.n-list__inline) li {
		margin-inline-start: 0;
		max-width: 100%;
	}

	li:before {
		display: none;
	}
}

[dir="rtl"] ol.n-list > li {
	margin: $line-height-em 2.3em $line-height-em/2 0;

	&:before {
		margin: 0 0 0 0.5em;
	}
}
/* niui – Modal */

@import "../../css/niui-setup";

.no-scroll {
	&,
	& body {
		overflow: hidden;
	}
}

html.n-full-screen {
	background: #000;

	body {
		opacity: 0;
	}
}

.n-ovrl {
	z-index: 999999;
	background: #fff;
	background: rgba(255, 255, 255, 0.97);
	overflow: hidden;
	overflow-y: auto;
	position: fixed;
	top: 0;
	bottom: 0;
	top: var(--overlay-top, 0);
	bottom: var(--overlay-bottom, 0);
	right: 0;
	left: 0;
	border-top: none;
	-webkit-backface-visibility: hidden;
	-moz-backface-visibility: hidden;
	backface-visibility: hidden;

	* {
		box-sizing: border-box;
	}
}

.n-ovrl--content {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	// 	    color: #fff;
	overflow-y: auto;
	overflow-x: none;
	-webkit-overflow-scrolling: touch;
	background: transparent;
	height: 100%; // For Android Browser, which doesn't understand the bottom line
	// 		height: calc(100% - #{$line-height-em*2});
	// 		height: calc(100% - var(--line-height-em)*2);
	padding-top: $line-height-em * 2;
}

.n-ovrl.n-modal__limited > .n-ovrl--content {
	padding: 0;
	height: 50vh;
	margin-top: 25vh;
	width: 50vw;
	margin-left: 25vw;
}

.n-ovrl > .n-ovrl--close {
	color: var(--control-color, #fff);
	cursor: pointer;
	padding: 0.75em;
	font-weight: bold;
	background-color: var(--control-bg, rgba(0, 0, 0, 0.7));
	width: 100%;
	z-index: 99999;
	top: 0;
	overflow: hidden;
	height: 3em;
	overflow-x: auto;
	white-space: nowrap;
	position: fixed;
	line-height: 1.5;
	font-size: inherit;
	text-align: start;
	border: 0;
	outline-offset: -5px;
}

.n-ovrl--close {
	line-height: $line-height * 2;
}

.n-ovrl.n-ovrl--headless {
	padding-top: 0;
}

.n-ovrl > * {
	background: #fff;
	position: relative;
}

.n-overlay-bg {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: -1;
	cursor: crosshair;
	background: transparent;
}

@media (max-width: $screen-narrow-max) {
	.n-ovrl {
		&.n-modal__limited > .n-ovrl--content {
			height: calc(80% - var(--overlay-bottom, 0)  - var(--overlay-top, 0));
			margin: 10%;
			width: 80%;
		}
	}

	.n-ovrl--close {
		height: 1.5em;
		padding: 0 0.75em;
	}

	.n-ovrl--content {
		padding-top: $line-height-em * 2;
	}
}

@media (max-height: 512px) and (orientation: landscape) {
	// Move the close bar to the side, because it's inaccessible with certain toolbar configurations

	.n-ovrl .n-slider--wrap.n-slider__overlay,
	.n-ovrl .n-slider--wrap.n-slider__vertical.n-slider__overlay {
		margin: 0;
		height: 100%;
	}

	.n-ovrl--content {
		padding: 0;
	}

	.n-ovrl > .n-ovrl--close {
		left: 0.5rem;
		right: auto;
		margin-top: 0.5rem;
		top: var(--overlay-top, 0);
		width: 40px;
		height: 40px;
		border-radius: 50%;
		font-size: 0;
		display: flex;
		justify-content: center;
		flex-direction: column;

		&:after {
			content: "╳";
			font-size: 1rem;
			display: inline-block;
			width: 40px;
			text-align: center;
		}
	}

	.n-slider__overlay.n-slider--wrap {
		margin: 0;
	}
}
// @import "../../../node_modules/n-carousel/n-carousel.scss"/* niui – Navigation */

@import "../../css/niui-setup";

.n-nav {
	vertical-align: baseline;
	display: inline-block;
	background-color: transparent;
	background-color: var(--control-bg, transparent);
	color: inherit;
	color: var(--control-color, inherit);

	ul {
		margin: 0 0 0 -0.5em;
		margin: 0;
		padding: 0;
		display: inline-block;
		width: auto;
		list-style: none;
		display: flex;
		flex-wrap: wrap;

		li {
			margin: 0;

			&:last-child {
				margin-right: 0;
			}
		}
	}

	&.n-nav__scroll {
		overflow: auto;
		max-width: 100%;

		> ul {
			display: flex;
			padding: 0.25em 0;
			flex-wrap: nowrap;
			white-space: nowrap;
		}
	}

	a {
		position: relative;
		padding: 0 0.25em;
	}

	.n-nav-current a[href] {
		text-decoration: none;
		opacity: 0.7;
	}

	&:not(.n-nav__drop) a[href^="#"] {
		text-decoration: none;
	}

	&.n-row {
		display: inline-flex;
	}
}

@supports (--a: 1) {
	.n-nav__scroll {
		a {
			padding: 0;
		}

		> ul {
			overflow: auto;
			max-width: 100%;
			transform: translate3d(0, 0, 0); // Safari macOS bug fix when using scrollbars: Not working initially.
			-webkit-overflow-scrolling: touch;
		}

		ul li {
			padding: $line-height-em/2;
		}
	}
}

main .n-nav ul {
	padding-left: 0;
}

// Drop nav

$bg: inherit; // fallback for browsers unsupporting CSS variables

.n-nav__drop {
	color: #333;
	color: var(--control-color, #333);
	background-color: transparent;
	max-width: 100%;

	ul {
		padding: 0;
		margin: 0;
		min-height: 0;
		z-index: 1;
	}

	ul ul {
		padding: 0;
		position: absolute;
		left: 0;
		top: 100%;
	}

	ul ul ul {
		margin-left: 100%;
		top: 0;
	}

	ul ul.n-left-side.n-right-overflow {
		margin-left: var(--n-right-overflow, 0);
	}

	ul ul.n-left-side ul {
		margin-left: 0;
		left: auto;
		right: 100%;
	}

	ul li {
		display: inline-block;
		vertical-align: top;
		margin: 0;
		padding: 0;
		box-sizing: border-box;
		position: relative;
		width: auto;
		background-color: #fff;
		background-color: var(--control-bg, #fff);
	}

	li > a {
		padding: 0.75em;
		display: block;
	}

	a:focus,
	li > :focus {
		outline-offset: -7px;
	}

	a[href] {
		position: relative;
	}

	li:not([aria-haspopup]) > a {
		z-index: 0;
	}

	ul[role="menubar"] li > a {
		margin-right: 0;
		padding-right: 0.75em;
	}

	ul[role="menubar"] li[aria-haspopup] > a {
		margin-right: 1.75em;
		padding-right: 0.75em;
	}

	&[data-ready] ul[role="menubar"] li[aria-haspopup] > a {
		margin-right: 0;
		padding-right: 0.75em;
	}

	li li {
		display: block;
		width: 100%;
	}

	ul li:not([aria-expanded]) > ul {
		min-height: 0;
		max-height: 0;
		overflow: hidden;
		position: absolute;
		/* 		visibility: hidden; // Disables hover */
	}

	ul li > :checked ~ ul,
	:focus ~ ul,
	a:focus ~ ul,
	ul li[aria-expanded] > ul,
	li li[aria-expanded] > ul,
	li li:not(:focus) :checked ~ ul {
		max-height: none;
		overflow: visible;
		opacity: 1;
		z-index: 2;
		background-color: #fff;
		background-color: var(--control-bg, #fff);
	}

	ul li[aria-expanded] > ul,
	li li[aria-expanded] > ul,
	li li:not(:focus) :checked ~ ul {
		z-index: 2; // Problem with CSS-only input method
	}

	li > input {
		-webkit-appearance: none;
		-moz-appearance: none;
		display: block;
		position: absolute;
		width: 100%; // iOS doesn't work with left/right
		height: 100%;
		border: none;
		border-radius: 0;
		right: 0;
		width: 1.875em;
		margin: 0;
		font-size: inherit;
		cursor: pointer;
	}

	li[aria-haspopup]:before {
		content: "";
		position: absolute;
		display: block;
		right: 0;
		top: 0;
		width: 1.25em;
		height: 100%;
	}

	ul.n-list:not(.n-list__no-bullet):not(.n-list__inline) li:before {
		content: "";
		margin: 0;
	}

	ul.n-list:not(.n-list__no-bullet):not(.n-list__inline).n-left-side li:before {
		right: auto;
		transform: rotate(180deg);
		left: 0;
		margin: 0;
		top: 0;
		height: 2em;
	}

	&.n-nav ul.n-list li:before {
		display: block;
		height: 100%;
	}

	li[aria-haspopup]:before,
	li > input {
		-webkit-mask: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg version='1.1' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpolygon transform='translate(8 8) rotate(180) translate(-8 -8)' points='8 0 16 16 0 16' fill='%23000' fill-rule='nonzero'/%3E%3C/g%3E%3C/svg%3E%0A")
			center center no-repeat;
		-webkit-mask-size: 0.4em;
		background-color: #000;
		background-color: var(--control-color, #000);
	}

	li > input {
		-webkit-mask-size: 0.6em;
	}

	&[data-ready] li > ul ~ a {
		background: none;
	}

	li[aria-haspopup] {
		padding-inline-end: 1.875em;
	}
}

@supports (-ms-ime-align: auto) {
	// Edge

	.n-nav__drop li[aria-haspopup]:before {
		background: transparent;
		color: #000 !important;
		color: var(--control-color, #000) !important;
		content: "↓" !important;
		text-align: center;
		line-height: 2 !important;
	}

	.n-nav__drop li li[aria-haspopup]:before {
		content: "→" !important;
	}
}

@media (min-width: $screen-narrow) {
	.n-nav__drop {
		--desktop: true;

		ul ul {
			transition: transform 0.2s ease-in-out;
			transform-origin: top;
			transform: scaleY(0);
		}

		ul li > :checked ~ ul,
		:focus ~ ul,
		a:focus ~ ul,
		ul li[aria-expanded] > ul,
		li li[aria-expanded] > ul,
		li li:not(:focus) :checked ~ ul {
			transform: scaleY(1);

			ul {
				transform: scaleX(1);
				transform-origin: left;
			}
		}

		li li {
			&[aria-haspopup]:before,
			> input {
				-webkit-mask-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg version='1.1' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpolygon transform='translate(8 8) rotate(90) translate(-8 -8)' points='8 0 16 16 0 16' fill='%23000' fill-rule='nonzero'/%3E%3C/g%3E%3C/svg%3E%0A");
			}
		}

		&:not([data-ready]) {
			// CSS only version

			li {
				display: flex;

				> input {
					position: static;
					order: 1;
				}

				&:not([tabindex]) > ul ~ a {
					padding-right: 0.75em;
				}
			}
		}

		li:not([tabindex]) > ul ~ a {
			padding-right: 2.75em;
		}

		ul.n-left-side li[aria-haspopup] {
			padding-inline-end: 0;
			padding-inline-start: 1.875em;

			&:before {
				transform: rotate(180deg);
			}
		}
	}

	html:not(.can-touch) {
		// Hover rules here

		.n-nav__drop {
			ul li:not([aria-expanded]) ul ul {
				transition: 0.1s 0.2s;
				opacity: 0;
				position: absolute;
				transform: scaleX(0);
				transform-origin: left;
			}

			ul li:not([aria-expanded]) ul.n-left-side ul {
				transform-origin: right;
			}

			> ul > li > ul li {
				background-color: #fff;
				background-color: var(--control-bg, #fff);
			}

			> ul > li:hover > input:not(:checked) ~ ul,
			> ul li ul > li:hover > input:not(:checked) ~ ul,
			> ul > li:not([aria-haspopup]):hover > input:not(:checked) ~ ul,
			> ul li:not([aria-haspopup]) ul li:hover > input:not(:checked) ~ ul {
				min-height: 0;
				max-height: 0;
				overflow: hidden;
				z-index: 1;
				position: absolute;
			}

			> ul > li:not([aria-haspopup]):hover > ul,
			> ul > li:hover > ul,
			> ul li ul > li:hover > ul,
			ul ul li:not([aria-expanded]) :checked ~ ul,
			> ul li:not([aria-haspopup]) ul li:hover ~ ul {
				max-height: none;
				overflow: visible;
				opacity: 1;
				z-index: 2;
				background-color: #fff;
				background-color: var(--control-bg, #fff);
				transform: scaleY(1);
			}

			> ul li ul li:hover ul {
				transition-delay: 0.2s;
				transform: scaleX(1);
			}
		}
	}

	nav.n-nav__drop ul[role="menubar"] > li > a {
		max-width: 100vw;
		white-space: normal;
	}

	nav.n-nav__drop li {
		white-space: nowrap;

		li[haspopup] > a,
		li li a {
			// To do: top level width 100em, max-width: 100vw

			white-space: normal;
			max-width: calc(33.33vw - 2em);
			width: 100em;
		}
	}

	// IE11

	_:-ms-input-placeholder,
	:root nav.n-nav__drop li {
		white-space: normal;
	}

	_:-ms-input-placeholder,
	:root nav.n-nav__drop ul ul ul {
		display: block;
	}

	_:-ms-input-placeholder,
	:root nav.n-nav__drop li:hover ul {
		overflow: visible !important;
		z-index: 2 !important;
		transform: none !important;
	}

	_:-ms-input-placeholder,
	:root nav.n-nav__drop input[type="checkbox"] {
		display: none !important;
	}

	_:-ms-input-placeholder,
	:root nav.n-nav__drop li ul ~ a:before {
		content: "↓";
		position: absolute;
		top: 0.75em;
		right: 0.5em;
		text-decoration: none !important;
	}

	_:-ms-input-placeholder,
	:root nav.n-nav__drop li li ul ~ a:before {
		content: "→";
	}

	_:-ms-input-placeholder,
	:root .n-nav__drop:not([data-ready]) li:not([tabindex]) > ul ~ a {
		padding-right: 1.75em;
	}

	/*
	html.can-touch .n-nav__drop ul li:not([aria-expanded]) > ul {
		
		visibility: hidden;
		
	}
*/

	html.can-touch .n-nav__drop li .n-left-side > li:not([aria-expanded]) {
		overflow: hidden;
	}

	[dir="rtl"] .n-nav__drop {
		li ul:not(.n-left-side) > li[aria-haspopup] {
			padding-left: 0;
			padding-right: 1.875em;

			&:before {
				right: 0;
				left: auto;
			}
		}

		li ul.n-left-side > li > a {
			text-align: left;
			text-align: start;
		}
	}
}

[dir="rtl"] .n-nav__drop {
	ul.n-left-side li[aria-haspopup],
	li[aria-haspopup] {
		padding-right: 0;
		padding-left: 1.875em;
	}

	&.n-nav ul.n-list li:before {
		left: 0;
		right: auto;
		margin-left: 0;
	}

	li[aria-haspopup]:before,
	li > input {
		right: auto;
		left: 0;
	}
}

@media (max-width: $screen-narrow-max) {
	.n-nav__drop ul {
		li:not([aria-expanded]) > ul {
			position: static;
			width: calc(100% + 3em);
			transition: max-height 0.2s ease-in-out;
		}

		ul {
			position: static;
			width: calc(100% + 3em);
			padding-left: 0.5em;
			overflow: hidden;
			box-sizing: border-box;

			ul {
				margin: 0;
			}
		}

		li {
			width: 100%;

			&[aria-haspopup] {
				padding-right: 3em;
			}
		}

		li[aria-haspopup][aria-expanded]:before {
			-webkit-mask-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg version='1.1' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpolygon transform='translate(8 8) rotate(0) translate(-8 -8)' points='8 0 16 16 0 16' fill='%23000' fill-rule='nonzero'/%3E%3C/g%3E%3C/svg%3E%0A");
		}

		&.n-list:not(.n-list__no-bullet):not(.n-list__inline).n-left-side li:before {
			right: 0;
			left: auto;
			transform: none;
		}
	}

	.n-nav__drop li[aria-haspopup]:before {
		-webkit-mask-position-y: 0.75em;
	}

	.n-nav__drop li > input {
		-webkit-mask-position-y: 1.15em;
	}

	html:not([data-nui-js]) .n-nav__drop {
		width: 100%;

		ul li {
			display: flex;
			flex-direction: column;

			a {
				order: -1;
			}
		}

		ul li:not([aria-expanded]) > ul {
			width: 100%;
		}
	}

	html:not([data-nui-js]) .n-fold.n-fold__mobile:not([aria-expanded]) .n-fold--content {
		max-width: 100%;
	}

	[dir="rtl"] .n-nav__drop {
		li[aria-haspopup] {
			padding-left: 2.5em;

			ul {
				max-width: calc(100% + 2.5em);
				padding-right: 0.5em;
				padding-left: 0;

				&.n-list:not(.n-list__no-bullet):not(.n-list__inline).n-left-side li:before {
					right: auto;
					left: 0;
				}

				ul {
					max-width: calc(100% + 1.875em);
				}
			}
		}
	}
}

@supports (-webkit-overflow-scrolling: touch) {
	// Not working on iOS 13?

	/* CSS specific to iOS devices */
	.n-nav__drop :focus {
		outline-style: dotted;
		outline-width: 1px;
	}
}
/* niui – Notification bar */

@import "../../css/niui-setup";

.n-notify {
	background: rgba(0, 0, 0, 0.8);
	text-align: center;
	padding: 1em;
	color: #fff;
	cursor: pointer;
	z-index: 1;

	&:after {
		content: " ✕";
	}

	&.n-notify__fixed {
		font-weight: 500;
		position: fixed;
		left: 0;
		right: 0;
		z-index: 2;
	}
}
.n-parallax {
	overflow: hidden;
}

.n-parallax--content {
	will-change: transform;
	transform: translateY(calc(var(--scrollparallax, 0) * 1px));
}
/* niui – Slider – CSS-only */

@import "../../css/niui-setup";

.n-slider {
	overflow: auto;
	overflow-y: hidden;
	white-space: nowrap; /* keep inline-block elements together */
	word-wrap: normal; /* IE8 fix */
	position: relative;
	-webkit-overflow-scrolling: touch;
	left: 0;

	display: flex;
	// will-change: transform; // Breaks WebKit full screen video
	min-height: 4em; // Make controls visible on very short slides
}

.n-slider > * {
	width: 100%;
	display: inline-block;
	white-space: normal;
	vertical-align: top;
	overflow: hidden;
	margin: 0;
	box-sizing: border-box;

	flex: 1 0 auto;
}

.n-slider.n-slider__vertical {
	> * {
		display: block;
	}

	> img {
		max-width: none;
		width: auto;
		max-height: 100%;
	}
}

@supports (--a: 1) {
	// New browsers only

	.n-slider > *:after,
	.n-slider > *:before {
		/* Slide background with full slider height */

		content: "<";
		display: block;
		position: absolute;
		top: 50%;
		bottom: 0;
		width: 100%;
		background: transparent;
		z-index: -1;
		opacity: 0.5;
	}

	.n-slider > *:after {
		content: ">";
		text-align: end;
	}

	.n-slider--wrap .n-slider > *:after,
	.n-slider--wrap .n-slider > *:before,
	.n-slider > *:first-child:before,
	.n-slider > *:last-child:after {
		display: none;
	}
}

.n-slider > div:before {
	// Specify full-height per-slide background here

	background: transparent;
}

.n-row .n-slider {
	padding: 0;
}

.n-slider > * > img {
	max-height: 100%;
	vertical-align: middle;
	margin: 0 auto;
	display: block;
	max-width: 100%;
}

.n-slider[data-peek] > * > img {
	//  	padding: 0 .25em; // Glitch on zoom
	box-sizing: content-box;
}

.n-slider.n-slider--center > * {
	display: flex;
	flex-direction: column;
	justify-content: center;
	text-align: center;
}

.n-slider.n-slider__auto-height[data-ready] > *:not([data-active]) {
	height: 0;
}

.n-slider--wrap .n-slider.n-middle > *,
.n-slider.n-middle > * {
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.n-slider.n-middle > * > * {
	text-align: center;
}

.n-slider--wrap.n-slider__overlay {
	top: 0px;
	bottom: 0px;
	height: 100%;
	right: 0px;
	left: 0px;
	width: 100%;
	z-index: 1;
	position: absolute;
}

// JS enhanced. To do: add [data-ready]

.n-slider.n-slider__overlay,
.n-slider--wrap.n-slider__overlay {
	height: 100%;
}

.n-slider--wrap.n-slider__overlay,
.n-slider--wrap.n-slider__vertical.n-slider__overlay {
	margin-top: $line-height-em * 2;
	height: calc(100% - #{$line-height-em * 2});
}

.n-slider--wrap.n-slider__vertical.n-slider__overlay/* , .n-slider.overlay, .overlay.n-slider > * */ {
	height: calc(100% - #{$line-height-em * 2});
}

// To do: move all .n-slider--wrap (enhanced slider) behind a @supports for modern browsers. Leave the basic CSS-only version for old browsers.

.n-slider--wrap {
	position: relative;
	overflow: hidden;
	max-height: 100%;
	// 	z-index: 1; // Hides nav on iOS 13 while sliding

	&,
	> * {
		box-sizing: border-box;
	}
}

.n-slider__vertical.n-tabs {
	&:not(.n-slider__detached-nav) > .n-slider {
		// Floats, because flex version is glitching when tab stack is taller than the slider. To do: fix flex version.

		width: 75%;
		float: right;
	}

	> .n-slider--nav.n-row,
	> .n-slider--nav.n-row.n-tabs,
	,
	> .n-pad > .n-slider--nav.n-row.n-tabs {
		width: 25%;
	}

	&.n-slider__right > .n-slider {
		float: left;
	}

	&.n-slider__right > .n-slider--nav.n-row,
	> .n-slider--nav.n-row.n-tabs,
	> .n-pad > .n-slider--nav.n-row.n-tabs {
		float: right;
	}

	> .n-slider--nav *,
	> .n-slider--nav.n-tabs *,
	> .n-pad > .n-slider--nav.n-tabs * {
		display: block;
		box-sizing: border-box;
		padding: $line-height-em/3 0.5em;
	}
}

@supports (--a: 1) {
	.n-aspect > .n-slider--wrap {
		height: 100%;
		width: 100%;
		position: absolute;

		&.n-slider__outside:not(.n-slider__vertical) {
			padding-bottom: var(--thumb-size, 4em);
		}

		> .n-slider,
		.n-slider.n-slider__vertical[data-ready] > *,
		> .n-pad > .n-slider {
			&,
			> * {
				height: 100%;
			}
		}
	}
}

/*
_:-ms-lang(x), .n-aspect > .n-slider--wrap { // n-aspect ratio not working in IE/Edge
		
	position: static;

}
*/

*:-webkit-full-screen .n-slider--wrap {
	background: #000;
}

*:-moz-full-screen .n-slider--wrap {
	background: #000;
}

*:fullscreen .n-slider--wrap {
	background: #000;
}

.n-slider[data-ready] {
	overflow: visible;
	width: 100%;
	padding: 0; // Because .n-slider.n-pad breaks the slider layout
	-ms-overflow-style: none; /* No scrollbars on IE10+ */
}

.n-slider__overlay.n-slider:not(.n-slider__vertical) > * {
	overflow: auto;
	-webkit-overflow-scrolling: touch;
}

.n-slider.n-slider__vertical[data-ready] {
	// 	overflow-y: scroll;
	overflow: visible;
	flex-direction: column;
}

.n-slider.n-slider__vertical[data-ready] > *,
.n-slider--wrap.n-tabs > .n-slider--arrow {
	height: auto;
	display: none;
}

.n-slider::-webkit-scrollbar {
	height: auto;
	display: none;
}

.n-slider--wrap {
	&.n-pad {
		padding: $line-height-em * 2;
	}

	> .n-pad {
		padding: 0;
		margin: $line-height-em * 2;
	}
}

.n-slider--wrap:not(.n-slider__peek) > .n-pad {
	overflow-x: hidden;
}

.n-slider[data-ready] > *:not([data-active]) {
	display: inline-block;
	pointer-events: none;
}

.n-slider[data-ready]:not([data-peek]) > *:not([data-active]) {
	// Disable focusing elements by tab key in inactive slides
	visibility: hidden;
}

.n-slider--wrap[data-active] > .n-slider:not([data-peek]) > *:not([data-active]),
.n-slider--wrap[data-active] > .n-pad > .n-slider:not([data-peek]) > *:not([data-active]),
.n-slider.n-slider__vertical[data-ready] > *:not([data-active]) {
	display: none;
}

.n-slider__overlay.n-slider > * {
	padding: 0;
}

.n-slider__overlay.n-slider.n-slider__vertical > * {
	height: 100%;
}

.n-slider[data-ready] > [data-active] {
	display: inline-block;
}

.n-slider__overlay.n-lightbox.n-slider > * > img {
	display: inline-block;
	object-fit: contain;
}

.n-slider__overlay.n-slider > img {
	padding: 0;
	height: auto;
}

.n-slider--arrow {
	position: absolute;
	top: 50%;
	left: $line-height-em/4;
	z-index: 3; /* Stay on top of n-slider--nav if they are aligned vertically */
	transform: translateY(-50%);
}

.n-slider--arrow:before {
	content: "←";
}

.n-slider__vertical > .n-slider--arrow {
	&:before {
		content: "↑";
	}

	top: 1em;
	left: 48%;
	left: calc(50% - 1em);
	text-align: center;
	transform: none;
}

.n-slider--arrow.n-slider__right {
	left: auto;
	right: $line-height-em/4;
}

.n-slider--arrow.n-slider__right:before {
	content: "→";
}

.n-slider__vertical > .n-slider--arrow.n-slider__right {
	&:before {
		content: "↓";
	}

	left: 48%;
	left: calc(50% - 1em);
	right: auto;
	bottom: 1em;
	top: auto;
}

.n-slider--arrow,
.n-slider--nav * {
	cursor: pointer;
	padding: 0.6em;
	width: 1em;
	height: 1em;
	-webkit-border-radius: 50px;
	border-radius: 50%;
	transition: background-color 0.2s linear;
	line-height: 1;
	box-sizing: content-box;
	background-color: var(--control-bg, #f8f8f8);
	color: var(--control-color, #333);
	border: 0;
	font-size: inherit;
}

.n-slider--arrow,
.n-slider--nav {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	user-select: none;
	will-change: transform; // iPhone bug
}

.n-slider--wrap > .n-slider--nav,
.n-slider--wrap > .n-pad > .n-slider--nav {
	position: absolute;
	bottom: 0;
	white-space: nowrap;
	left: 50%;
	transform: translateX(-50%);
	z-index: 1;
	max-width: 100%;
	max-height: 100%;
	overflow: auto;
	box-sizing: content-box; // For hard scrollbars (mouse without trackpad)
	text-align: left;
	text-align: start;
	justify-content: flex-start;
	-webkit-overflow-scrolling: touch;
}

.n-slider--wrap.n-slider__top .n-slider--nav {
	bottom: auto;
	top: 0;
}

.n-slider--wrap.n-slider__vertical > .n-slider--nav {
	width: auto;
	display: flex;
	flex-direction: column;
	bottom: auto;
	left: 0.5em;
	padding: 1em 0;
	top: 50%;
	transform: translateY(-50%);
	z-index: 1;
}

.n-slider--wrap.n-slider__vertical.n-slider__outside.n-lightbox__thumbnails {
	> .n-slider--nav {
		padding: 0;
		left: -0.5em;

		:last-child {
			margin-bottom: 0;
		}

		:first-child {
			margin-top: 0;
		}
	}

	&.n-slider__right > .n-slider--nav {
		left: auto;
		right: -0.5em;
	}
}

.n-slider--wrap.n-slider__right.n-slider__vertical > .n-slider--nav {
	right: 0.5em;
	left: auto;
}

.n-slider--nav * {
	display: inline-block;
	margin: 0.5em;
	line-height: 2em;
	padding: 0;
	width: var(--nav-size, 2em);
	height: var(--nav-size, 2em);
	min-height: var(--nav-size, 2em);
	text-align: center;
}

.n-slider.n-slider__vertical > [data-active],
.n-slider__vertical > .n-slider--nav * {
	display: block;
	overflow: auto;
}

.n-slider--nav [data-active] {
	background-color: var(--control-active-bg, #ededed);
	color: var(--control-active-color, #000);
}

.n-slider--wrap.n-tabs > .n-slider--nav,
.n-slider--nav.n-tabs {
	right: auto;
	position: static;
	transform: none;
}

.n-tabs > .n-slider--nav.n-row,
.n-slider--nav.n-row.n-tabs {
	padding: 0;
	margin: 0;
	width: 100%;
}

.n-full-window .n-slider--wrap.n-tabs > .n-slider--nav {
	position: absolute;
	bottom: 0;
	padding: 0;
}

.n-slider--wrap.n-tabs > .n-slider--nav *,
.n-tabs.n-slider--nav * {
	text-indent: 0;
	width: auto;
	height: auto;
	text-align: left;
	text-align: start;
	border-radius: 0;
	line-height: $line-height;
	padding: 0.5em;
	margin: 0;
	flex: 1;
	outline-offset: -6px; // Don't crop
	white-space: normal;
	min-height: 0;
	box-sizing: border-box;
}

.n-slider--wrap.n-slider__vertical.n-lightbox__thumbnails {
	width: 100%;

	&.n-slider__outside {
		&:not(.n-slider__right) {
			padding-left: calc(var(--thumb-size, 4em) + 1em);

			> .n-slider--arrow {
				left: calc(50% + 1.5em);
			}
		}

		&.n-slider__right {
			padding-right: calc(var(--thumb-size, 4em) + 1em);

			> .n-slider--arrow {
				left: calc(50% - 3.5em);
			}
		}
	}
}

/*
[data-active="true"] > .n-slider.n-slider__vertical.n-tabs[data-ready] {
	
	overflow: hidden;

}
*/

@media screen and (max-width: $screen-narrow-max) {
	.n-slider--wrap.n-tabs > .n-slider--nav.n-row,
	.n-slider--nav.n-row.n-tabs,
	.n-slider--wrap.n-tabs > .n-slider--nav * {
		display: block;
		white-space: normal;
	}

	.n-slider__vertical.n-tabs:not(.n-slider__detached-nav) > .n-slider,
	.n-slider__vertical.n-tabs > .n-slider--nav.n-row.n-tabs {
		width: 100%;
		float: none;
	}

	.n-slider--wrap.n-slider__overlay,
	.n-slider--wrap.n-slider__vertical.n-slider__overlay {
		margin-top: $line-height-em * 2;
		height: calc(100% - #{$line-height-em * 2});
	}

	/*
	.n-slider > * { // Stack slides vertically on old mobile browsers

		display: block;

	}

	@supports (--a: 1) { // ...and restore the slider on modern browsers
		
		.n-slider > * {
	
			display: inline-block;
	
		}
	
	}
*/
}
/* Tables */

@import "../../css/niui-setup";

.n-table {
	width: 100%;
	overflow: auto;
	border-collapse: collapse;
	-webkit-overflow-scrolling: touch;
	display: block;
	// 	margin: $line-height-em 0;

	td,
	th {
		padding: $line-height-em $line-height-em/2;
		vertical-align: middle;
	}

	th,
	thead td {
		color: #fff;
		font-weight: bold;
		padding-bottom: $line-height-em;
		font-size: 1.1em;
		background: rgba(0, 0, 0, 0.1);
		text-align: left;
		text-align: start; // RTL support

		button.n-table-sort {
			width: 100%;
			cursor: pointer;
			-webkit-appearance: none;
			appearance: none;
			font: inherit;
			text-align: inherit;
			border: 0;
			padding: 0;
			background: none;
			color: inherit;
			-webkit-touch-callout: none;
			-webkit-user-select: none;
			-khtml-user-select: none;
			-moz-user-select: none;
			user-select: none;

			&:after {
				content: "⇳";
				margin-left: 0.5em;
			}
		}
	}

	tr:nth-child(2n + 1) {
		background: rgba(0, 0, 0, 0.1);
	}

	tr,
	td,
	th,
	iframe {
		border: none;
	}
}

.n-table::-webkit-scrollbar {
	display: none;
}

.n-table--wrap {
	overflow-x: auto;
	/*
    scrollbar-3dlight-color: grey;
    scrollbar-arrow-color: grey;
    scrollbar-base-color: transparent;
    scrollbar-darkshadow-color: grey;
    scrollbar-face-color: transparent;
    scrollbar-highlight-color: transparent;
    scrollbar-shadow-color: transparent;
*/
	-webkit-overflow-scrolling: touch;

	.n-table {
		display: table;
	}
}

@media screen and (max-width: $screen-narrow-max) {
	.n-table {
		display: block;
		overflow: scroll;
		table-layout: auto;

		td {
			word-break: normal;
		}
	}
}
/* niui – Tooltip */

@import "../../css/niui-setup";

.n-tool {
	cursor: help;
	font-weight: bold;
	position: relative;

	&:after {
		content: "?";
		display: inline-block;
		border-radius: 100%;
		width: 1.5em;
		text-align: center;
		font-weight: normal;
	}
}

.n-tool:after,
.n-tool--tip {
	background-color: #444;
	background-color: var(--control-bg, #444);
	color: #ddd;
	color: var(--control-color, #ddd);
}

.n-tool--tip[aria-expanded],
html:not(.can-touch) .n-tool:hover .n-tool--tip {
	opacity: 1;
	visibility: visible;
	display: block;
}

.n-tool--tip[aria-expanded] {
	display: flex;
}

.n-tool--tip {
	overflow: visible;
	max-height: calc(100vh - 40px);
	padding: $line-height-em/2;
	font-size: 0.8em;
	font-weight: normal;
	position: absolute;
	top: auto;
	left: 0;
	right: 0;
	z-index: 999;
	text-align: start;
	visibility: hidden;
	opacity: 0;
	transition: opacity 0.2s ease-in-out;
	width: 20em;
	line-height: $line-height/1.25;
	display: none;

	span {
		overflow: auto;
	}

	&:after {
		content: "";
		position: absolute;
		background-color: #444;
		background-color: var(--control-bg, #444);
		transform: rotate(45deg);
		width: 1em;
		height: 1em;
	}

	&[data-n-position="top"],
	&[data-n-position="bottom"] {
		margin-left: var(--offset_x, 0);

		&:after {
			left: calc(50% - 0.5em - var(--offset_x, 0));
			bottom: -0.45em;
		}
	}

	&[data-n-position="bottom"]:after {
		top: -0.45em;
	}

	&[data-n-position="left"],
	&[data-n-position="right"] {
		margin-top: var(--offset_y, 0);

		&:after {
			top: calc(50% - 0.5em - var(--offset_y, 0));
			left: -0.45em;
		}
	}

	&[data-n-position="left"]:after {
		right: -0.45em;
		left: auto;
	}
}
/* niui – Typography */

@import "../../css/niui-setup";

.n-type {
	color: #333;
	-webkit-text-size-adjust: none;
	font-size: $font-size;
	line-height: $line-height;
	font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
	letter-spacing: 0.5px; // For proof: because sometimes there are aberrations with non-default spacing. Safari bug: value flashing from 0 https://bugs.webkit.org/show_bug.cgi?id=193008

	/* Elements with double line-height */

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		line-height: $line-height;
		word-break: break-word; // Overflow protection for long words
		word-wrap: break-word;
		font-weight: 500;
		margin: 24px 0;

		@media (max-width: $screen-narrow-max) {
			-webkit-hyphens: auto;
			hyphens: auto;
		}
	}

	h1 {
	}

	h1 + p:not(.n-drop-cap),
	h2 + p:not(.n-drop-cap),
	h3 + p:not(.n-drop-cap),
	h4 + p:not(.n-drop-cap),
	h5 + p:not(.n-drop-cap),
	h6 + p:not(.n-drop-cap) {
		margin-top: 0;
	}

	h1 {
		font-size: 2em;
	}

	h2 {
		font-size: 1.5em; // 	line-height: 1.333;
		line-height: $line-height/1.5; // = standard line-height / new font-size in em
	}

	h3 {
		font-size: 1.2em;
		line-height: ($line-height * 1.011)/1.2;
	}

	h4 {
		font-size: 1em;
	}

	h5 {
		font-size: 0.8em;
		line-height: 1.9;
	}

	h6 {
		font-size: 0.6667em;
		line-height: 2.3;
	}

	pre {
		overflow: auto;
	}

	p {
		font-size: 1em;
		margin: $line-height-em 0;
		line-height: $line-height;
	}

	.n-drop-cap:first-letter {
		float: left;
		font-size: 5em;
		padding: 0.1em 0.1em 0.1em 0;
		margin-top: -0.2em;
		line-height: 1em;
	}

	a[href] {
		color: inherit;
	}

	p a[href] {
		display: inline;
	}

	hr {
		display: block;
		height: 1px;
		border: 0;
		border-top: 1px solid #cccccc;
		margin: 1em 0;
		padding: 0;
	}

	.quote,
	blockquote,
	q {
		border-left: 1px solid #bbb;
		padding-left: 1em;
		display: block;
		margin: $line-height-em 0 $line-height-em 1em;
	}

	&[dir="rtl"] {
		.n-drop-cap:first-letter {
			float: right;
		}

		.quote,
		blockquote {
			margin-left: 0;
			border-left: none;
			padding-left: 0;
			margin-right: 1em;
			border-right: 1px solid #bbb;
			padding-right: 1em;
		}
	}

	.n-big-text {
		font-size: 1.125em;
		line-height: 1.3334em;
		min-height: 1.3334em;
	}
}

.n-adjust-height {
	// 	transition: padding-bottom .1s ease-in-out;
	padding-bottom: calc(1px * var(--adjust-height));
	box-sizing: content-box;
}
